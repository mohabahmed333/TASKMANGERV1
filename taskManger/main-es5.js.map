{"version":3,"sources":["webpack:///src/app/admin-nav/admin-nav.component.ts","webpack:///src/app/admin-nav/admin-nav.component.html","webpack:///src/app/tasks/tasks-start/tasks-start.component.ts","webpack:///src/app/tasks/tasks-start/tasks-start.component.html","webpack:///src/app/user-page/userpage.service.ts","webpack:///src/app/user-page/email/email.component.ts","webpack:///src/app/user-page/email/email.component.html","webpack:///src/app/tasks/shared/loadingSpinner/loadingSpinner.ts","webpack:///src/app/user/user.module.ts","webpack:///src/app/tasks/tasks-model/tasks-model.module.ts","webpack:///src/environments/environment.ts","webpack:///src/app/user/userTaskList.module.ts","webpack:///src/app/tasks/tasks-list/tasks-list.component.ts","webpack:///src/app/tasks/tasks-list/tasks-list.component.html","webpack:///src/app/tasks/tasks.component.ts","webpack:///src/app/tasks/tasks.component.html","webpack:///src/app/tasks/shared/loadingSpinner/tag.module.ts","webpack:///src/app/tasks/tasks-list/task-item/task-item.component.html","webpack:///src/app/tasks/tasks-list/task-item/task-item.component.ts","webpack:///src/app/angular-material/angular-material.module.ts","webpack:///src/app/login/store/auth.actions.ts","webpack:///src/app/tasks/tasks.module.ts","webpack:///src/app/store/app.reducer.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/login/auth.guard.ts","webpack:///src/app/tasks/tasksrouting.module.ts","webpack:///src/app/app.module.ts","webpack:///src/app/tasks/store/tasks.effects.ts","webpack:///src/app/tasks/store/Task.reducers.ts","webpack:///src/app/login/store/auth.effects.ts","webpack:///src/app/tasks/task-dialog/task-dialog.component.ts","webpack:///src/app/tasks/task-dialog/task-dialog.component.html","webpack:///src/app/tasks/tasks-list/task-item/task-preview-dialog/task-preview-dialog.component.ts","webpack:///src/app/tasks/tasks-list/task-item/task-preview-dialog/task-preview-dialog.component.html","webpack:///src/app/confirm/confirm.component.ts","webpack:///src/app/confirm/confirm.component.html","webpack:///src/app/login/store/auth.reducer.ts","webpack:///src/app/tasks/store/Task.service.ts","webpack:///src/app/app-routing.module.ts","webpack:///src/app/tasks/store/Task.Action.ts","webpack:///src/main.ts","webpack:///$_lazy_route_resource lazy namespace object"],"names":["AdminNavComponent","route","store","_snackBar","getUserPage","open_nav","horizontalPosition","verticalPosition","notification","index","task","menu","openLoginForm","logout","signIn","display","login","isLoading","date","Date","toDateString","dispatch","subscribe","select","tasks","length","console","log","authState","loading","user","down","document","querySelector","classList","toggle","e","navigate","auth","form","email","value","password","ErrorMessage","open","dimissTime","setTimeout","dismiss","valid","Username","username","firstName","lastName","userI","next","unsubscribe","onLoginForm","onSignUp","TasksStartComponent","getUserInfo","EmailComponent","keyup","addClass","val","removeClass","LoadingSpiner","User","id","_token","_tokenExprationDate","TasksModule","selectedRole","projectTitle","description","scheduleStart","scheduleEnd","notify","statues","tags","taskType","group","owner","companyName","others","progress","piorty","environment","production","firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","InnerTasks","taskTitle","TaskDescription","startIn","endat","comments","UserTaskList","TasksListComponent","dialog","subscripe","totalProject","afterOpened","i","list","getElementById","Array","from","children","filter","textContent","includes","trim","forEach","add","remove","search","TasksComponent","TagsModule","tag","TaskItemComponent","bussiness","border","taskTypeBackGround","scStart","Task","scEnd","goDown","matrialComponent","AngularMaterialModule","AuthenticatedSucces","login_start","AuthenticatedFAILD","LOGOUT","SIGNUP","Sin_Up_start","AutoLogIn","payload","type","Signup","signUpStart","startAction","LoginStart","LoginFaild","LogOut","autoLog","TaskModule","AppReducer","Tasks","Auth","AppComponent","title","AuthGuard","router","pipe","IsAuth","createUrlTree","routes","path","component","canActivate","TasksRoutingModule","forChild","AppModule","forRoot","instrument","logOnly","tasksEffects","http","acion$","storeTasks","actionData","taskState","put","data","err","initializing","users","updatingTask","updatingIndex","TaskReducers","state","action","updatingTasks","TaskUSer","ig","igIndex","TitleTaskB","UTaskTitle","UpdatingTasksTitle","TASKTYPEDIT","updateTaskType","updatingATasksType","Tags","updateTaskTag","updatingATasksTags","updatingTaskTag","SCEdit","updateTaskDate","start","end","updatingATasksDate","updateTask","updatingATasks","TASKWITHPROGRESS","updateTaskProgress","ALLTASKS","DESCRIPTIONEDIT","updateTaskDESCRIPTIONEDIT","ALLTASKSDESCRIPTION","PIORTYEDIT","updateTaskPIORTYEDIT","ALLTASKSPiorty","TASKWITHOUTGA","updatingTASKWITHGO","UPDATINGATASKSWITHOG","AuthEffects","action$","authSignUp","siUpdata","post","returnSecureToken","expressionDate","getTime","expiresIn","userId","localId","token","idToken","expirationDate","errRsp","message","error","authLogin","authData","AuthData","AuthSucces","localStorage","setItem","JSON","stringify","autoLOGIN","userData","parse","getItem","loadedData","logOut","removeItem","loginSucces","TaskDialogComponent","dialogRef","other","role","personalSelected","selected","selectedD","editMode","typesOfRoles","business","Notes","List","TypeSelected","range","roleI","roleInfo","splice","Taskinfo","close","reset","formSubmitted","TaskPreviewDialogComponent","TaskS","TitleEdit","progressEdit","descriptionEdit","piortyEdit","dateEdit","taskEdit","groupSubmitted","USERaDDED","panelOpenState","ACtive","getusers","subsecription","params","find","T","I","afterClosed","g","userstart","adminName","P","SchStart","schEnd","SchEnd","TagsM","maxLength","errorMessage","push","mailDetail","css","deleteUSer","getUser","innerTaSks","addusers","InnrTasks","addInnerTask","editInnerTask","innerTask","getInnerTask","TP","DeleteinnerTask","click","siblings","userTask","TaskForm","setValue","full","selectedTypeSubmit","activatedProject","edit","saveTask","progressEditF","addTag","addUserTask","ConfirmComponent","initializeState","reducer","authReducer","signUpUser","UserTaskLists","tasksList","slice","taskIndex","innerIndex","redirectTo","pathMatch","loadChildren","then","m","HomeModule","LoginModule","NoteModule","UserPageModule","WeatherModule","UserTasksModule","AppRoutingModule","relativeLinkResolution","ADD_USERS","Add_Task","Add_Tasks","Updated_Item","Deleted_Item","StartEdit","stopEdit","getter","ADD_INNER","TITLEEDIT","ActiveProject","PROGRESS_VALUE","setGroupOwner","TAGS","DELETETAG","store_Tasks","AddTask","AddTasks","StoreTasks","UpdatedItem","Deleting","StartEditing","StopEdit","get","AddInnerTasks","AddUsers","Activate","DescriptionEdit","PiortyEdit","TaskType","Schedit","ProgressVAlue","deleteTag","GroupAndOwner","bootstrapModule","webpackEmptyAsyncContext","req","Promise","resolve","Error","code","keys","module","exports"],"mappings":"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","file":"main-es5.js","sourcesContent":["\nimport { AfterViewInit, APP_BOOTSTRAP_LISTENER, Component, OnInit, Output, ViewEncapsulation } from '@angular/core';\nimport {  Router } from '@angular/router';\nimport * as $ from 'jquery';\nimport {  Store } from '@ngrx/store';\nimport { AppState } from '../../app/store/app.reducer';\nimport * as authActions from '../login/store/auth.actions';\nimport { Observable, Subscription } from 'rxjs';\n\nimport { NgForm } from '@angular/forms';\nimport * as fromAuthAction from  '../login/store/auth.actions';\nimport { getUserInfo } from '../user-page/userpage.service';\nimport { MatSnackBar, MatSnackBarHorizontalPosition, MatSnackBarVerticalPosition } from '@angular/material/snack-bar';\nimport { UserInfo } from '../user/userInfo.module';\n\n@Component({\n  selector: 'app-admin-nav',\n  templateUrl: './admin-nav.component.html',\n  styleUrls: ['./admin-nav.component.scss',\n              './setting.component.scss' ,'./leftmenu.scss','./menu.scss'],\n  encapsulation:ViewEncapsulation.Emulated\n})\nexport class AdminNavComponent implements OnInit ,AfterViewInit {\n  open_nav:boolean=false;\n  horizontalPosition: MatSnackBarHorizontalPosition = 'center';\n  verticalPosition: MatSnackBarVerticalPosition = 'top';\n  subscribe:Subscription;\n  notification={\n    index:0,\n    task:[]\n  };\n  menu:boolean= false;\nstate:Observable<boolean>;\nopenLoginForm=false;\nlogout =false;\nsignIn=false;\ndisplay=false;\nuserName;\nloading:boolean;\nlogin=false;\ndate:any;\nisLoading=false;\n// open:boolean;\n  constructor(\n              private route:Router,\n              private store:Store<AppState>,\n\n              private _snackBar: MatSnackBar,\n    private getUserPage:getUserInfo,\n\n    \n     ) { \n    }\n  ngOnInit(): void {\n    this.date = new Date().toDateString()\nthis.store.dispatch(new authActions.autoLog())\n this.subscribe= this.store.select('Tasks').subscribe(tasks=>{\n  this.notification.task = tasks.tasks;\n  this.notification.index = tasks.tasks.length;\n  console.log(this.notification)\n})\n \n\nthis.store.select('Auth').subscribe(authState=>{\n\n  this.loading = authState.loading;\nthis.signIn = !!authState.user;\n})\n  \n\n\n\n// Just a tiny bit of JavaScript to add classnames to the HTML-element on toggle\n\n\n\n    \n  }\n  slideNav(){\n    // this.open_nav=true\n    const down =document.querySelector('.down');\n    down.classList.toggle('down_nav')\n    \n  }\nngAfterViewInit(){\n\n  \n}\n\n\n\nshownotification(e){\n\nthis.display = !this.display\n}\nshowMenue(){\n  this.menu = !this.menu\n}\ngoProfile(){\n  this.route.navigate(['./userPage']);\n  this.menu= false\n}\nlogOut(){\n// this.user.user.next(null);\nthis.store.dispatch(new authActions.LogOut());\nthis.store.select('Auth').subscribe(auth=>{\n  console.log(auth)\n})\n}\nshowWeather(){\n\nthis.route.navigate(['/weatherPage'])}\n\n\nonLoginForm(form:NgForm){\n  this.store.dispatch(new fromAuthAction.LoginStart({email:form.value.email,password:form.value.password}));\n  this.store.select('Auth').subscribe(authState=>{\n    if(authState.ErrorMessage&&authState.ErrorMessage!=null){\n      this._snackBar.open(authState.ErrorMessage, 'x', {\n        horizontalPosition: this.horizontalPosition,\n        verticalPosition: this.verticalPosition,  })\n    }else{\n  \n      this._snackBar.open('login success', 'x', {\n        horizontalPosition: this.horizontalPosition,\n        verticalPosition: this.verticalPosition,  })\n    }\n  })\n  let dimissTime = setTimeout(()=>{\n    this._snackBar.dismiss()\n  },2000);\n  \n      }\n\n      \n      onSignUp(form:NgForm){\n\n\n\n        if(!form.valid){\n          return\n        }\n        const email:string = form.value.email;\n        const password = form.value.password;\n        const Username:string = form.value.username;\n        const firstName:string = form.value.firstName;\n        const lastName:string = form.value.lastName;\n        const userI:UserInfo={Username,firstName,lastName,email}\n        this.getUserPage.userI.next(userI)\n                this.store.dispatch(new fromAuthAction.signUpStart({email:email,password:password}))\n        \n        \n        \n        \n        \n\n      }\n        \n      show_menu(){\n        $('.menu').toggle({\n          display:'block'\n        })\n      }\n      ngOnDestroy(): void {\n      \n        if(this.subscribe){\n          this.subscribe.unsubscribe()\n        }\n      }\n}\n\n","<div class=\"top-nav\">\n\n  <div class=\"page-wrapper chiller-theme \">\n  \n   \n      \n \n    \n      <!-- sidebar-wrapper  -->\n      <main class=\"page-content\">\n        <div class=\"down\">      \n              <div class=\"app-header\">\n              <div class=\"app-header-left p\">\n                <!-- <span class=\"app-icon\"></span> -->\n         \n                <mat-icon *ngIf=\"signIn\" id=\"show-sidebar\" (click)=\"slideNav()\" class=\" ml-3\">expand</mat-icon>\n               \n                <!-- <div class=\"search-wrapper\">\n                  <input class=\"search-input\" type=\"text\" placeholder=\"Search\">\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"none\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" class=\"feather feather-search\" viewBox=\"0 0 24 24\">\n                    <defs></defs>\n                    <circle cx=\"11\" cy=\"11\" r=\"8\"></circle>\n                    <path d=\"M21 21l-4.35-4.35\"></path>\n                  </svg>\n                </div> -->\n              </div>\n  \n              <div class=\"app-header-right\">\n                <!-- <div class=\"projects-section-header\" >\n               \n                  <button mat-raised-button style=\"height: 36px;\n                  background: blueviolet;\" (click)=\"showWeather()\">\n                    \n\n\n                  </button>\n                  \n                  \n                </div> -->\n                <p style=\"display: flex;\" class=\"time\">{{date}} </p>\n              \n          <!-- notification start -->\n          <div class=\"notification-icon right \" *ngIf=\"signIn\" (click)=\"shownotification($event)\">\n            <i class=\"material-icons dp48\">notifications</i>\n            <span class=\"num-count\">{{notification.index}}</span>\n          </div>\n     \n          <!-- <span class=\"material-icons-outlined\">\n            login\n            </span> -->\n  \n            <button \n             mat-stroked-button color=\"primary\"\n             *ngIf=\"!signIn\"\n             data-bs-toggle=\"offcanvas\"\n              data-bs-target=\"#loginForm\"\n              aria-controls=\"offcanvasRight\"\n             >\n\n             <mat-icon>login</mat-icon>\n              login \n               </button>\n            <button (click)=\"logOut()\" mat-stroked-button color=\"primary\"  *ngIf=\"signIn\">\n              <mat-icon>logout</mat-icon>\n              logout \n               </button>\n               <div class=\"userIcon\" style=\"position: relative q;\" *ngIf=\"signIn\">\n                 <mat-icon (click)=\"showMenue()\" style=\"margin: auto 18px; cursor:pointer\">account_circle</mat-icon>\n  \n  \n                  <ul class=\"list-group \" style=\"position: absolute;\" *ngIf=\"menu\">\n                    <li class=\"list-group-item d-flex\" style=\"cursor: pointer;\" (click)=\"goProfile()\"><p style=\"width: 80%;\">My profile </p><mat-icon class=\"icon\">person</mat-icon></li>\n                    <li class=\"list-group-item\"> switch to night mode   <button class=\"mode-switch\" title=\"Switch Theme\">\n                      <svg class=\"moon\" fill=\"none\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n                        <defs></defs>\n                        <path d=\"M21 12.79A9 9 0 1111.21 3 7 7 0 0021 12.79z\"></path>\n                      </svg>\n                    </button> </li>\n                  </ul>\n               </div>\n  \n          \n          <!-- notification start -->\n  \n  \n  \n  <!-- loggin container -->\n  \n  \n  \n       \n  \n              </div>\n        \n              \n     \n      </div>\n      <!-- app-slider -->\n      <div class=\"app-sidebar\" *ngIf=\"signIn\">\n     \n        \n        <a routerLink=\"./tasks\" \n        class=\"app-sidebar-link \" \n        routerLinkActive=\"link_activated\"\n        routerLinkActive=\"link_activated\"\n        matTooltip=\"all tasks\">\n          \n\n<img src=\"../../assets/task-list.png\" width=\"70%\" alt=\"\">        </a>\n        <a routerLink=\"./note\" \n        class=\"app-sidebar-link \" \n        routerLinkActive=\"link_activated\"\n        routerLinkActive=\"link_activated\"\n        matTooltip=\"note  app`\">\n          \n\n<mat-icon>note_add</mat-icon>      </a>\n   \n \n\n        <a  routerLink=\"userTask\" routerLinkActive=\"link_activated\"\n         class=\"app-sidebar-link \" matTooltip=\"my Tasks\">\n          <img src=\"../../assets/tasks.png\" width=\"70%\" alt=\"\">    \n               </a>\n        <a routerLink=\"/userPage\" class=\"app-sidebar-link\"  \n        routerLinkActive=\"link_activated\"\n        matTooltip=\"profile\" >\n          <img src=\"../../assets/user.png\" width=\"70%\" alt=\"\">    \n               </a>\n  \n         \n\n      </div>\n      </div>\n    \n      <mat-card-footer *ngIf=\"loading\">\n        <mat-progress-bar mode=\"indeterminate\"></mat-progress-bar>\n      </mat-card-footer>\n    \n      \n  \n       \n      <router-outlet ></router-outlet>\n      <app-login  *ngIf=\"openLoginForm\"></app-login>\n  \n  \n  </main>\n       \n  <div class=\"notification-container\" *ngIf=\"display\" >\n    <h3>Notifications\n    </h3>\n<div  *ngFor=\"let task of notification.task\">\n\n  <input class=\"checkbox\" type=\"checkbox\" id=\"size_1\" value=\"small\" checked />\n  <label class=\"notification new\" for=\"size_1\"><em>1</em> new <a href=\"\">new task</a> {{task.projectTitle}}<i class=\"material-icons dp48 right\">clear</i></label>\n  \n\n  </div>\n  </div>\n      <!-- page-content\" -->\n    </div>\n    <!-- page-wrapper -->\n    \n<!-- loggin form -->\n\n<div class=\"offcanvas offcanvas-end\" tabindex=\"-1\" id=\"loginForm\" aria-labelledby=\"offcanvasRightLabel\">\n  <div class=\"offcanvas-header\">\n    <h1 id=\"offcanvasRightLabel\">TaskManger</h1>\n    <button type=\"button\" class=\"btn-close text-reset close_button\" data-bs-dismiss=\"offcanvas\" aria-label=\"Close\"></button>\n  </div>\n  <div class=\"offcanvas-body\">  \n\n    <div id=\"login\">\n\n      <h1><strong>Welcome.</strong> Please login.</h1>\n    \n      <form #login=\"ngForm\"\n      (ngSubmit)=\"onLoginForm(login)\" >\n    \n        <fieldset>\n    \n          <p><input type=\"text\" ngModel name=\"email\"\n            id=\"inputEmail3\"\n             required email placeholder=\"email\"></p>\n    \n          <p><input type=\"password\" required value=\"Password\" placeholder=\"Password\" ngModel name=\"password\"></p>\n            \n\n    \n          <p><input type=\"submit\" value=\"Login\" [disabled]=\"!login.valid\" data-bs-dismiss=\"offcanvas\"></p>\n         <h3  data-bs-toggle=\"offcanvas\"\n         data-bs-target=\"#signup\"\n           style=\"color: rgb(73, 73, 202); cursor: pointer;\n           \">signup?</h3> \n        </fieldset>\n    \n      </form>\n    \n      <p><span class=\"btn-round\">or</span></p>\n    \n      <p class=\"mb-2\">\n    \n        <a class=\"facebook-before\"><span class=\"fontawesome-facebook\"></span></a>\n        <button  disabled  matTooltip=\"this action not avalible right now\" class=\"facebook\">Login Using Facbook</button>\n    \n      </p>\n    \n      <p class=\"mb-2\">\n    \n        <a class=\"twitter-before\"><span class=\"fontawesome-twitter\"></span></a>\n        <button disabled  matTooltip=\"this action not avalible right now\" class=\"twitter\">Login Using Twitter</button>\n    \n      </p>\n      <p class=\"mb-2\">\n    \n        <a class=\"twitter-before \"><span class=\"fontawesome-linkedin\"></span></a>\n        <button disabled  matTooltip=\"this action not avalible right now\" class=\"twitter\">Login Using linkedin</button>\n    \n      </p>\n    \n    </div>\n  </div>\n\n</div>\n<!-- loginForm -->\n<!-- signup form -->\n    <div class=\"offcanvas offcanvas-end\" tabindex=\"-1\" id=\"signup\" aria-labelledby=\"offcanvasRightLabel\">\n      <div class=\"offcanvas-header\">\n        <h1 id=\"offcanvasRightLabel\">TaskManger</h1>\n        <button type=\"button\" class=\"btn-close text-reset \" data-bs-dismiss=\"offcanvas\" aria-label=\"Close\">x</button>\n\n      </div>\n      <div class=\"offcanvas-body\">\n\n        <div id=\"login\">\n\n          <h1><strong>Welcome.</strong></h1>\n        \n          <form #signUp=\"ngForm\" (ngSubmit)=\"onSignUp(signUp)\">\n        \n            <fieldset>\n        \n              <p><input type=\"text\"\n                 ngModel name=\"firstname\"\n                 #firstname=\"ngModel\" \n                  required\n                id=\"inputEmail3\"\n                 required email placeholder=\"username\">\n                \n                </p>\n                <div class=\"valid-feedback\" [style.display]=\"firstname.valid?'block':'none'\">\n                  Looks good!\n                </div>\n              <p><input type=\"text\"\n                 ngModel name=\"lastname\"\n                 #lastname=\"ngModel\" \n                  required\n                id=\"inputEmail3\"\n                 required email placeholder=\"lastname\">\n                \n                </p>\n                <div class=\"text-success\"  *ngIf=\"lastname.touched&&lastname.valid\">\n                  Looks good!\n                </div>\n                <p><input type=\"text\"\n                  ngModel name=\"username\"\n                  #username=\"ngModel\" \n                   required\n                 id=\"inputEmail3\"\n                  required email placeholder=\"username\">\n                 \n                 </p>\n\n                <div class=\"invalid-feedback\" *ngIf=\"username.touched&&!username.valid\" [style.display]=\"!username.valid?'block':'none'\">\n                  Please choose a username.\n                </div>\n                <p><input type=\"text\"\n                  ngModel name=\"city\"\n                  #city=\"ngModel\" \n                   required\n                 id=\"inputEmail3\"\n                  required email placeholder=\"city\">\n                 \n                 </p>\n                <p><input type=\"text\"\n                  ngModel name=\"email\"\n                  #email=\"ngModel\" \n                   required\n                 id=\"inputEmail3\"\n                 email\n                  required email placeholder=\"email\">\n                  \n                </p>\n                <p  *ngIf=\"!email.valid&&email.touched\" class=\"text-danger\">please enter   valid email</p>\n              <p><input type=\"password\" required value=\"Password\" placeholder=\"Password\" ngModel name=\"password\"></p>\n                \n              \n        \n              <p><input type=\"submit\" value=\"signup\" [disabled]=\"!signUp.valid\" data-bs-dismiss=\"offcanvas\"></p>\n             <h3  data-bs-toggle=\"offcanvas\"  \n             data-bs-toggle=\"offcanvas\" \n             data-bs-target=\"#loginForm\"\n            aria-controls=\"offcanvasWithBothOptions\" \n               style=\"color: rgb(73, 73, 202); cursor: pointer;\n               \">Already have account ?</h3> \n            </fieldset>\n        \n          </form>\n        \n          <p><span class=\"btn-round\">or</span></p>\n        \n          <p class=\"mb-2\"  matTooltip=\"this action not avalible right now\">\n        \n            <a class=\"facebook-before\"><span class=\"fontawesome-facebook\"></span></a>\n            <button disabled  matTooltip=\"this action not avalible right now\" class=\"facebook\">signup Using Facbook</button>\n        \n          </p>\n        \n          <p class=\"mb-2\"  matTooltip=\"this action not avalible right now\">\n        \n            <a class=\"twitter-before\"><span class=\"fontawesome-twitter\"></span></a>\n            <button disabled  class=\"twitter\">signup Using Twitter</button>\n        \n          </p>\n          <p class=\"mb-2\"  matTooltip=\"this action not avalible right now\">\n        \n            <a class=\"twitter-before \"><span class=\"fontawesome-linkedin\"></span></a>\n            <button disabled  matTooltip=\"this action not avalible right now\" class=\"twitter\">signup Using linkedin</button>\n        \n          </p>\n        \n        </div>\n      </div>\n    </div>\n\n\n    <!-- menu -->\n    ","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-tasks-start',\n  templateUrl: './tasks-start.component.html',\n  styleUrls: ['./tasks-start.component.scss','./task-start.scss']\n})\nexport class TasksStartComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<!-- <mat-tab-group animationDuration=\"0ms\">\r\n    <mat-tab label=\"Tasks\">\r\n\r\n\r\n        <div class=\"TaskInfo\">\r\n            <h1>Task name</h1>\r\n\r\n            <p>Lorem ipsum dolor sit amet consectetur, adipisicing elit.\r\n                 Tenetur iste ducimus laboriosam provident. Expedita tenetur \r\n                aut nisi. Temporibus, unde consequuntur \r\n                ab vitae nemo maiores saepe rem quis fugit harum nesciunt.</p>\r\n\r\n                <div class=\"statues\">\r\n                    <div class=\"row\">\r\n\r\n                        <p  class=\"col-md-6\">important</p>\r\n                        <p   class=\"col-md-6\" style=\"color: red;\" class=\"high\">high</p>\r\n                    </div>\r\n             \r\n                </div>\r\n\r\n                <div class=\"files\">\r\n\r\n                    <mat-icon >file</mat-icon>\r\n                    <div>Lorem ipsum dolor s\r\n                        \r\n                        it amet, consectetur adipisicing elit. Qui iure blanditiis sint soluta deleniti tempora, doloribus \r\n                        quod dignissimos sit, dolore, corporis minima corrupti! Nihil, vero aliquam similique quaerat eaque laboriosam.\r\n                    </div>\r\n\r\n\r\n                </div>\r\n        </div>\r\n\r\n    \r\n\r\n\r\n    </mat-tab>\r\n    <mat-tab label=\"users\">Content 2</mat-tab>\r\n    <mat-tab label=\"settings\">Content 3</mat-tab>\r\n  </mat-tab-group> -->\r\n\r\n  <app-task-preview-dialog></app-task-preview-dialog>","import { Injectable } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\nimport { UserInfo } from '../user/userInfo.module';\r\n\r\n\r\n@Injectable({providedIn:'root'})\r\n\r\nexport class getUserInfo{\r\n\r\nuserI = new Subject<UserInfo>();\r\n\r\n    constructor(){}\r\n\r\n    get(){\r\n        return this.userI\r\n    }\r\n}\r\n\r\n","import { Component, OnInit } from '@angular/core';\nimport * as $ from 'jquery'\n@Component({\n  selector: 'app-email',\n  templateUrl: './email.component.html',\n  styleUrls: ['./email.component.scss']\n})\nexport class EmailComponent implements OnInit {\n\n  constructor() {\n    $(\"#name\").keyup(function () {\n      $(\".name\").addClass(\"typing\");\n      if ($(this).val().length == 0) {\n        $(\".name\").removeClass(\"typing\");\n      }\n    });\n    $(\"#email\").keyup(function () {\n      $(\".email\").addClass(\"typing\");\n      if ($(this).val().length == 0) {\n        $(\".email\").removeClass(\"typing\");\n      }\n    });\n    $(\"#message\").keyup(function () {\n      $(\".message\").addClass(\"typing\");\n      if ($(this).val().length == 0) {\n        $(\".message\").removeClass(\"typing\");\n      }\n    });\n    \n   }\n\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"conta\">\n\n    <form class=\"contact-form\">\n        <div class=\"name\">\n            <label for=\"name\">Full Name</label>\n            <input type=\"text\" id=\"name\" />\n        </div>  \n        <div class=\"email\">\n            <label for=\"email\">Email</label>\n            <input type=\"text\" id=\"email\" />\n        </div>\n        <div class=\"message\">\n            <label for=\"message\">Message</label>\n            <textarea name=\"message\" id=\"message\"></textarea>\n        </div>\n        <div class=\"submit\">\n            <p class=\"user-message\">Message to the user.</p>\n            <input type=\"submit\" value=\"Send\" class=\"button\" />\n        </div>\n    </form>\n    \n</div>","import { Component } from \"@angular/core\";\r\n\r\n@Component({\r\n    selector:'app-loading-spinner',\r\n    template:`<div class=\"lds-facebook\"><div></div><div></div><div></div></div>`,\r\n    styleUrls:['./loadingSpiner.component.css']\r\n})\r\n\r\nexport class LoadingSpiner {\r\n\r\n}","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n\n\nexport class User { \n\n  constructor(\n    public id:string ,\n    public email:string,\n     private _token:string ,\n     private _tokenExprationDate:Date,\n    //  public username:string,\n     \n     \n     ){\n\n  }\n  get token(){\nif(this._tokenExprationDate,new Date > this._tokenExprationDate){\n  return null\n}\n   return this._token\n  }\n\n\n}\n","import { UserTaskList } from \"src/app/user/userTaskList.module\";\nimport { TagsModule } from \"../shared/loadingSpinner/tag.module\";\nimport { InnerTask } from \"./innerTask.module\";\n\nexport class TasksModule {\n\n  constructor(\n\n    public selectedRole:string,\n    public projectTitle:string,\n    public description:string,\n    public scheduleStart:Date,  \n    public scheduleEnd:Date,\n    public notify:string=\"yes\",\n    public  statues:boolean=false,\n    public tags:TagsModule[]=[new TagsModule('sdaads')],\n    public taskType?:string,\n    public group?:number,\n    public owner?:string,\n    public user?:UserTaskList[],\n    public companyName?:string,\n    public others?:string,\n    public progress?:number,\n    public piorty?:string,\n    \n    // Public group?:string\n    ){\n  \n  }\n}\n//  export class ToDoList{\n//    constructor(public todoList:string){}\n//  }","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  firebase :{\n    apiKey: \"AIzaSyCxSIovXABL9J3NBNV1PRXNtW_a_5ZEO1s\",\n    authDomain: \"businessmangement-b0624.firebaseapp.com\",\n    databaseURL: \"https://businessmangement-b0624-default-rtdb.firebaseio.com\",\n    projectId: \"businessmangement-b0624\",\n    storageBucket: \"businessmangement-b0624.appspot.com\",\n    messagingSenderId: \"524429515432\",\n    appId: \"1:524429515432:web:ae3014caf1a58c52e5809d\",\n    measurementId: \"G-78BPYT890S\"\n  }\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","export class InnerTasks{\r\n    constructor(public taskTitle:string\r\n        ,public TaskDescription:string\r\n        ,public startIn:Date\r\n        ,public endat:Date\r\n        ,public comments?){}\r\n}\r\n\r\nexport class UserTaskList{\r\n\r\n    constructor(public user:string,\r\n        public tasks:[InnerTasks]\r\n        \r\n            ){}\r\n}","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Store } from '@ngrx/store';\nimport {  Observable, Subscription } from 'rxjs';\nimport { TaskDialogComponent } from '../task-dialog/task-dialog.component';\nimport { TasksModule } from '../tasks-model/tasks-model.module';\nimport * as taskactions from '../store/Task.Action'\nimport { AppState } from 'src/app/store/app.reducer';\n@Component({\n  selector: 'app-tasks-list',\n  templateUrl: './tasks-list.component.html',\n  styleUrls: ['./tasks-list.component.scss'],\n  encapsulation:ViewEncapsulation.None\n})\nexport class TasksListComponent implements OnInit {\n  // it should be observable\n// tasks:TasksModule[];\ntasks:Observable< { tasks: TasksModule[] }>;\nsubscripe:Subscription\n\ntotalProject:number\n  constructor(\n    private store:Store<AppState>,\n    public dialog:MatDialog,\n\n\n    ) { }\n\n  ngOnInit(): void {\nthis.tasks = this.store.select('Tasks');\nthis.subscripe =this.tasks.subscribe(task=>{\n\n  this.totalProject = task.tasks.length\n})\n  \n\n// this.tasks.filter(task!='asd')\n\n\n    \n\n    \n\n  }\n  addTask(){\n    this.dialog.open(TaskDialogComponent).afterOpened().subscribe(()=>{\n      this.store.dispatch(new taskactions.StopEdit())\n\n      \n      \n    \n    })\n  }\n  new(){\n    this.dialog.open(TaskDialogComponent)\n  }\n  search(i){\nconst list =document.getElementById('list');\nArray.from(list.children)\n.filter(task=>!task.textContent.includes(i.value.trim()))\n.forEach(task=>task.classList.add('filterd'))\nArray.from(list.children)\n.filter(task=>task.textContent.includes(i.value.trim()))\n.forEach(task=>task.classList.remove('filterd'))\n\n\n  }\nngOnDestroy(): void {\nthis.subscripe.unsubscribe()\n}\n  \n}\n","\n\n    <div class=\"d-flex justify-content-between align-items-center mt-2 p-2  \"> \n      <span class=\"font-weight-bold\">All Tasks</span>\n      <div class=\"d-flex flex-row\"> \n        \n        <button class=\"btn btn-primary new\" (click)=\"new()\">\n        <i class=\"fa fa-plus\"></i> New</button> </div>\n\n        \n      </div>\n     \n      <div class=\"tasks mt-3\">\n        <div class=\"mt-3 inputs mb-2\" style=\"display: flex;\"> \n          <input style=\"width: 100%;\" type=\"text\" (keyup)=\"search(input)\" class=\"form-control \" placeholder=\"Search Tasks...\" #input >  \n          \n        \n        </div>\n\n        <div class=\"row\" id=\"list\">\n\n          \n          <app-task-item class=\"col-md-6 col-12\"\n          *ngFor= \" let task of (tasks|async).tasks ;let i = index\"\n          [Task]=\"task\"\n          [index]=\"i\"\n          ></app-task-item>\n        </div>\n\n  \n        <!-- </ul> -->\n  \n      \n    </div> \n  \n  \n \n  \n  ","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\n\n@Component({\n  selector: 'app-tasks',\n  templateUrl:'./tasks.component.html',\n  styleUrls: ['./tasks.component.scss'],\n  encapsulation:ViewEncapsulation.Emulated\n\n})\nexport class TasksComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n    \n  }\n\n}\n","\n<div class=\"row m-3\">\n\n    <div class=\"col-md-6 col-12 \">\n\n        <app-tasks-list></app-tasks-list>\n        \n    </div>\n    <div class=\"col-md-6 col-12\">\n        <router-outlet></router-outlet>\n\n\n    </div>\n</div>\n\n\n","export class TagsModule{\r\n    constructor(public tag:string){}\r\n}","<!-- <li class=\"list-group-item flex tasks-l\">  \n  <div >  \n    {{i}}\n  </div>\n  <div class=\"col-md-2 TaskI\"> \n    <h5>{{Task.projectTitle}}</h5>\n\n  </div>\n  <div class=\"col-md-3 Due \"> \n    <p class=\"red\">start:{{scStart}}</p>\n    <p class=\"red\">end:{{scEnd}}</p>\n\n  </div>\n  <div class=\"col-md-3 users \" style=\"display: none;\"> \n    <section class=\"flex team-group\n    \" >\n\n      <div class=\"user\">\n        Na\n    \n      </div>\n\n      <div class=\"user\">\n        Na\n      </div>\n\n      <div class=\"user\">\n        Na\n      </div>\n      <div class=\"user\">\n        Na\n      </div>\n      <div class=\"user\">\n        Na\n      </div>\n    </section>\n\n    \n  </div>\n  <div > \n   {{Task.statues}}\n\n  </div>\n \n  <div class=\"col progress_bar\">\n    <div class=\"progressInfo flex\">\n      <p style=\"width: 70%;\"> progress</p> <p style=\"width:20%;text-align: end;\">0%</p>\n    </div>\n    <mat-progress-bar  #progress mode=\"determinate\" value=\"0\"></mat-progress-bar>\n\n\n  </div>  \n  <div class=\" menu-b\" >\n\n    <button mat-icon-button [matMenuTriggerFor]=\"menu\" aria-label=\"Example icon-button with a menu\">\n      <mat-icon>more_vert</mat-icon>\n    </button>\n    <mat-menu #menu=\"matMenu\">\n      <button mat-menu-item [routerLink]=\"[index]\" routerLinkActive=\"router-link-active\" >\n        <mat-icon>remove_red_eye</mat-icon>\n        <span>preview</span>\n      </button>\n   \n      <button mat-menu-item>\n        <mat-icon>notifications_off</mat-icon>\n        <span>notify me!</span>\n      </button>\n    </mat-menu>\n    \n  </div>  \n\n</li> -->\n<!-- <nav class=\"menu\">\n  <input type=\"checkbox\" href=\"#\" class=\"menu-open\" name=\"menu-open\" id=\"menu-open\" />\n  <label class=\"menu-open-button\" for=\"menu-open\">\n   <span class=\"lines line-1\"></span>\n   <span class=\"lines line-2\"></span>\n   <span class=\"lines line-3\"></span>\n </label>\n\n  <a href=\"#\" class=\"menu-item blue\"> <i class=\"fa fa-anchor\"></i> </a>\n  <a href=\"#\" class=\"menu-item green\"> <i class=\"fa fa-coffee\"></i> </a>\n  <a href=\"#\" class=\"menu-item red\"> <i class=\"fa fa-heart\"></i> </a>\n  <a href=\"#\" class=\"menu-item purple\"> <i class=\"fa fa-microphone\"></i> </a>\n  <a href=\"#\" class=\"menu-item orange\"> <i class=\"fa fa-star\"></i> </a>\n  <a href=\"#\" class=\"menu-item lightblue\"> <i class=\"fa fa-diamond\"></i> </a>\n</nav> -->\n\n  <!-- 1px solid #dda9a9de; -->\n  <!-- 1px solid #b2dcb2; -->\n  <div class=\"card-main clearfix\" [style.border]=\"border\">\n  <div class=\"user-details\">\n    <div class=\" d-flex \" style=\"justify-content: space-between;\">\n  \n      \n      <h2>{{Task.projectTitle.toUpperCase()}}</h2>\n  \n      \n    <div class=\"right-icon\">\n      \n      <button mat-icon-button [matMenuTriggerFor]=\"menu\" aria-label=\"Example icon-button with a menu\">\n        <mat-icon>more_vert</mat-icon>\n      </button>\n      <mat-menu #menu=\"matMenu\">\n        <button mat-menu-item [routerLink]=\"[index]\"  (click)=\"goDown()\" >\n          <mat-icon>remove_red_eye</mat-icon>\n          <span>preview</span>\n        </button>\n        \n        <button mat-menu-item>\n          <mat-icon>notifications_off</mat-icon>\n          <span>Diabled Alerts</span>\n        </button>\n      </mat-menu>\n      \n    </div>\n  </div>\n  \n  <p>{{Task.description}} \n   </p>\n  <hr>\n  <div>\n    <div class=\"d-flex\">\n      <mat-icon style=\"color: rgba(52,211,153);\">person</mat-icon>\n      <p >Created by/ </p> \n      <p class=\"ms-1\" style=\"color: rgba(52,211,153);\"\n      >Project Manger</p>\n    </div>\n  </div>\n\n    <div class=\"info-extra\">\n      <small> start:    {{scStart}}\n      </small>\n      <br>\n      <small style=\"color: #ef6060;\"> END:    {{scEnd}}\n      </small>\n    </div>\n    \n    <div class=\"bottom-info\" >\n      <div class=\" progress_bar\">\n        <div class=\"progressInfo flex  justify-content-between\" style=\"font-size: 10px;\">\n          <p  class=\" progress_text\"  [style.background-color]=\"taskTypeBackGround\"> {{Task.taskType?Task.taskType:'T o D o'}}</p> \n          <p style=\"width:20%;text-align: end;\">{{Task.progress?Task.progress + '%':'0%'}}</p>\n      </div>\n      <mat-progress-bar  #progress mode=\"determinate\" [value]=\"Task.progress\"></mat-progress-bar>\n      \n      \n    </div> \n    <div class=\"bottom-left\" *ngIf=\"bussiness\">\n      <div  matTooltip=\"comments\"\n      matTooltip=\"this is a demo section \"\n      matTooltipClass=\"example-tooltip-red\"\n      aria-label=\"Button that shows a red tooltip\"\n      > \n\n        <img\n        src=\"../../../../assets/speech-bubble.png\"\n        width=\"10%\"\n         alt=\"\"\n\n         >\n         0   \n         <img class=\"ms-3 mt-2\" src=\"../../../../assets/task-list.png\" width=\"10%\"  alt=\"\">\n         0/9\n      </div>\n\n </div>\n\n    <div class=\"bottom-right\" *ngIf=\"bussiness\"     matTooltip=\"this is a demo section with demo content\"\n    matTooltipClass=\"example-tooltip-red\"\n    aria-label=\"Button that shows a red tooltip\">\n      <ul class=\"more-avatar\">\n        <li><div></div></li>\n        <li><div></div></li>\n        <li><div></div></li>\n        <li><div></div></li>\n      </ul>\n    </div>\n  </div>\n</div>\n\n","import { Component, OnInit ,Input, ViewEncapsulation} from '@angular/core';\nimport { TasksModule } from '../../tasks-model/tasks-model.module';\n\n@Component({\n  selector: 'app-task-item',\n  templateUrl: './task-item.component.html',\n  styleUrls: ['./task-item.component.scss','./quieck.scss']\n  // encapsulation:ViewEncapsulation.None\n\n})\nexport class TaskItemComponent implements OnInit {\n  @Input() Task:TasksModule;\n  bussiness= false;\n  @Input() index:number;\n scStart;\n scEnd; \n i;\n border=\"\"\ntaskTypeBackGround:string=\"#19a408\";\n  constructor() { }\n\n  ngOnInit(): void {\n\n    \nthis.i = this.index + 1\nthis.scStart=this.Task.scheduleStart.toDateString()\nthis.scEnd=this.Task.scheduleEnd.toDateString();\nconsole.log(this.Task.taskType);\nif(this.Task.taskType==='Finished'){\n  this.taskTypeBackGround='#19a408'\n}else if(this.Task.taskType==='INProgress'){\n  this.taskTypeBackGround='#3b4db2c2'\n\n}else{\n  this.taskTypeBackGround ='#2fbeff'\n}\n\nthis.Task.statues===true?this.border=\"1px solid  #b2dcb2\":this.border=\"1px solid #dda9a9de \"\nconsole.log(this.Task.selectedRole\n  )\nthis.Task.selectedRole==='business'?this.bussiness=true:this.bussiness=false\n\n\n} \n  oneditItem(index){\n  } \n  goDown(){\n  }\nshow(e){\nconsole.log(e)\n}\n}\n","import { NgModule } from '@angular/core';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatIcon, MatIconModule} from '@angular/material/icon';\nimport {MatMenuModule} from '@angular/material/menu';\nimport {MatDatepickerModule} from '@angular/material/datepicker';\nimport { MatNativeDateModule } from '@angular/material/core';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatAutocompleteModule} from '@angular/material/autocomplete';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport {MatDividerModule} from '@angular/material/divider';\nimport {MatSelectModule} from '@angular/material/select';\nimport {MatSliderModule} from '@angular/material/slider';\nimport {MatChipsModule} from '@angular/material/chips';\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\nimport {MatBadgeModule} from '@angular/material/badge';\nimport {DragDropModule} from '@angular/cdk/drag-drop';\nimport {MatTooltipModule} from '@angular/material/tooltip';\nimport {MatTableModule} from '@angular/material/table';\nimport {MatDialogModule} from '@angular/material/dialog';\nimport {MatTabsModule} from '@angular/material/tabs';\nimport {MatListModule} from '@angular/material/list';\nimport {MatSlideToggleModule} from '@angular/material/slide-toggle';\nimport {MatExpansionModule} from '@angular/material/expansion';\nimport {MatStepperModule} from '@angular/material/stepper';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\nimport {MatButtonToggleModule} from '@angular/material/button-toggle';\n\nconst matrialComponent = [\n  MatTooltipModule,\n  MatMenuModule,\n  MatListModule,\n  MatIconModule,\n  MatButtonModule,\n  MatDatepickerModule,\n  MatNativeDateModule,\n  MatInputModule,\n  MatAutocompleteModule,\n  MatFormFieldModule,\n  MatDividerModule,\n  MatSelectModule,\n  MatSliderModule,\n  MatChipsModule,\n  MatProgressSpinnerModule,\n  MatProgressBarModule,\n  MatBadgeModule,\n  DragDropModule,\n  MatTableModule,\n  MatDialogModule,\n  MatTabsModule,\n  MatExpansionModule,\n  MatStepperModule,\n  MatCardModule,\n  MatSnackBarModule,\n  MatButtonToggleModule,\n  MatSlideToggleModule\n  \n  \n]\n\n@NgModule({\n  imports: [\n    matrialComponent],\n  exports:[\n    matrialComponent\n  ]\n})\nexport class AngularMaterialModule { }\n","import { Action, createAction, props } from \"@ngrx/store\";\r\nexport const AuthenticatedSucces = '[auth] LOGIN';\r\nexport const login_start = '[auth] login_start'\r\nexport const AuthenticatedFAILD = '[auth] LOGIN_FAILD';\r\nexport const LOGOUT= '[auth] LOGOUT';\r\nexport const SIGNUP = \"[auth] sign_Up\"\r\nexport const Sin_Up_start = \"[auth] SING_UP_start\";\r\nexport const AutoLogIn = \"[auth] AutoLogIn\"\r\nexport class login implements Action {\r\n    readonly type=AuthenticatedSucces\r\n\r\n    constructor(public payload:{\r\n        email:string,\r\n        userId:string,\r\n        token:string,\r\n        expirationDate:Date\r\n\r\n    }){\r\n\r\n    }\r\n}\r\n\r\nexport class Signup implements Action{\r\n    readonly type = SIGNUP;\r\n \r\n constructor(public payload:{ \r\n        email:string,\r\n    userId:string,\r\n    token:string,\r\n    expirationDate:Date}\r\n    ){}\r\n}\r\nexport class signUpStart implements Action{\r\n    readonly type = Sin_Up_start;\r\n    constructor(public payload:{email:string,password:string}){}\r\n}\r\n\r\nexport const startAction = createAction(\r\n    '[action]',props<{payload:any}>()\r\n) \r\nexport class LoginStart implements Action{\r\n    readonly type = login_start;\r\n    constructor(public payload: {email:string,password:string}){}\r\n}\r\n\r\nexport class LoginFaild implements Action{\r\n    readonly type = AuthenticatedFAILD;\r\n    constructor(public payload:string){}\r\n}\r\nexport class LogOut implements Action{\r\n    readonly type =LOGOUT;\r\n\r\n\r\n}\r\nexport class autoLog implements Action{\r\n    readonly type= AutoLogIn\r\n}\r\nexport type AuthType =\r\nlogin | \r\nLogOut| \r\nLoginFaild |\r\n LoginStart|\r\n signUpStart|\r\n Signup\r\n ","import { NgModule } from \"@angular/core\";\r\nimport { CommonModule } from \"@angular/common\";\r\nimport { RouterModule } from \"@angular/router\";\r\nimport { FormsModule } from \"@angular/forms\";\r\nimport { AngularMaterialModule } from \"../angular-material/angular-material.module\";\r\nimport { TaskDialogComponent } from \"./task-dialog/task-dialog.component\";\r\nimport { TaskItemComponent } from \"./tasks-list/task-item/task-item.component\";\r\nimport { TaskPreviewDialogComponent } from \"./tasks-list/task-item/task-preview-dialog/task-preview-dialog.component\";\r\nimport { TasksListComponent } from \"./tasks-list/tasks-list.component\";\r\nimport { TasksComponent } from \"./tasks.component\";\r\nimport { TasksRoutingModule } from \"./tasksrouting.module\";\r\nimport { TasksStartComponent } from \"./tasks-start/tasks-start.component\";\r\n\r\n@NgModule({\r\n    declarations:[\r\n        TasksComponent,\r\n        TasksListComponent,\r\n        TaskItemComponent,\r\n        TaskDialogComponent,\r\n        TaskPreviewDialogComponent,\r\n        TasksStartComponent,\r\n    \r\n    ],\r\n    imports:[\r\n        RouterModule,\r\n        TasksRoutingModule,\r\n        AngularMaterialModule,\r\n        FormsModule,\r\n        CommonModule,\r\n    ]\r\n    \r\n})\r\nexport class TaskModule {}","import { ActionReducerMap } from '@ngrx/store';\r\nimport * as fromTasksReducer from '../tasks/store/Task.reducers';\r\nimport * as fromAuthReducer from '../login/store/auth.reducer';\r\n\r\n\r\nexport interface AppState {\r\n    Tasks:fromTasksReducer.State;\r\n\r\n    Auth:fromAuthReducer.State\r\n}\r\n\r\n\r\nexport const AppReducer:ActionReducerMap<AppState|any > = {\r\n    Tasks:fromTasksReducer.TaskReducers ,\r\n\r\n    Auth:fromAuthReducer.authReducer\r\n\r\n}","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { AngularFireAuth } from '@angular/fire/auth';\nimport { AngularFirestore } from '@angular/fire/firestore';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n  \n})\nexport class AppComponent implements OnInit {\n  constructor(){}\n  ngOnInit(){\n     \n  }\n  title = 'taskManger';\n}\n","\r\n<app-admin-nav></app-admin-nav>\r\n\r\n","import { Injectable } from \"@angular/core\";\r\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot, UrlTree } from \"@angular/router\";\r\nimport { Store } from \"@ngrx/store\";\r\nimport { Observable } from \"rxjs\";\r\nimport { map, take, tap } from \"rxjs/operators\";\r\nimport { AppState } from \"../store/app.reducer\";\r\n\r\n@Injectable({\r\n    providedIn:'root'\r\n})\r\n\r\n\r\nexport class AuthGuard implements CanActivate {\r\nconstructor(private router:Router , private store:Store<AppState>){}\r\ncanActivate(route:ActivatedRouteSnapshot,router:RouterStateSnapshot):boolean|UrlTree|Promise<boolean|UrlTree>|Observable<boolean|UrlTree>{\r\n\r\nreturn this.store.select('Auth').pipe(\r\n    take(1),\r\n    map(authState=> {\r\n        return  authState.user\r\n    }),\r\n    map(user=>{\r\n        \r\nconst IsAuth = !!user;\r\nif(IsAuth){\r\n    return true\r\n}\r\n\r\n    return this.router.createUrlTree(['/home'])\r\n\r\n\r\n    }),\r\n    // tap(isAuth=>{\r\n    //     if(!isAuth){\r\n\r\n    //         this.router.navigate(['/home'])\r\n    //     }\r\n    // })\r\n    )\r\n    \r\n}\r\n\r\n}","import { NgModule } from \"@angular/core\";\r\nimport { RouterModule, Routes } from \"@angular/router\";\r\nimport { AuthGuard } from \"../login/auth.guard\";\r\nimport { TaskItemComponent } from \"./tasks-list/task-item/task-item.component\";\r\nimport { TaskPreviewDialogComponent } from \"./tasks-list/task-item/task-preview-dialog/task-preview-dialog.component\";\r\nimport { TasksStartComponent } from \"./tasks-start/tasks-start.component\";\r\nimport { TasksComponent } from \"./tasks.component\";\r\n\r\nconst routes:Routes =[\r\n\r\n    {path:'', component:TasksComponent,\r\ncanActivate:[AuthGuard],\r\nchildren:[\r\n  {path:'taskItem', component:TaskItemComponent},\r\n  {path:':id',component:TaskPreviewDialogComponent},\r\n\r\n]},\r\n{path:'taskStart/:id/:title',component:TasksStartComponent}\r\n\r\n]\r\n\r\n@NgModule({\r\n    imports:[\r\n        RouterModule.forChild(routes)\r\n    ],\r\n    exports:[RouterModule]\r\n})\r\n\r\nexport class TasksRoutingModule{};","import { NgModule } from '@angular/core';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { AdminNavComponent } from './admin-nav/admin-nav.component';\nimport {  HttpClientModule } from '@angular/common/http';\nimport { environment } from '../environments/environment';\nimport \"dhtmlx-scheduler\";\nimport { NgxDatatableModule } from '@swimlane/ngx-datatable';\nimport { StoreModule, } from '@ngrx/store';\nimport { LoadingSpiner } from './tasks/shared/loadingSpinner/loadingSpinner';\nimport { EmailComponent } from './user-page/email/email.component';\nimport { ConfirmComponent } from './confirm/confirm.component';\nimport { AppReducer } from './store/app.reducer';\nimport { AuthEffects } from './login/store/auth.effects';\nimport { StoreDevtoolsModule } from '@ngrx/store-devtools';\nimport{StoreRouterConnectingModule } from '@ngrx/router-store';\n\nimport { TaskModule } from './tasks/tasks.module';\nimport { EffectsModule } from '@ngrx/effects';\nimport { AngularMaterialModule } from './angular-material/angular-material.module';\nimport { FormsModule } from '@angular/forms';\nimport { tasksEffects } from './tasks/store/tasks.effects';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    AdminNavComponent,\n    LoadingSpiner,\n    EmailComponent,\n    ConfirmComponent,\n\n    \n\n    \n\n    \n  ],\n\n  imports: [\n    AngularMaterialModule,\n    FormsModule,\n    BrowserModule,\n    AppRoutingModule,\n    TaskModule,\n    HttpClientModule,\n    BrowserAnimationsModule,\n   NgxDatatableModule,\n   StoreModule.forRoot(AppReducer),\n   EffectsModule.forRoot([AuthEffects,tasksEffects]),\n   StoreDevtoolsModule.instrument({logOnly:environment.production}),\n   StoreRouterConnectingModule.forRoot()\n   ],\n  providers: [\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import * as TasksAction from './Task.Action';\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { Actions, createEffect, Effect, ofType } from \"@ngrx/effects\";\r\nimport { Store } from \"@ngrx/store\";\r\nimport { of } from \"rxjs\";\r\nimport { catchError, map, switchMap, withLatestFrom } from \"rxjs/operators\";\r\nimport * as TasksStore from'./../../store/app.reducer'\r\nimport { TasksModule } from '../tasks-model/tasks-model.module';\r\n@Injectable()\r\nexport class tasksEffects {\r\n\r\n\r\n     \r\n    \r\n    \r\n        @Effect({dispatch:false})\r\n        storeTasks= this.acion$.pipe(\r\n            ofType(TasksAction.store_Tasks),\r\n            withLatestFrom(this.store.select('Tasks')),\r\n            switchMap(([actionData,taskState])=>{\r\n\r\n                return this.http.put(\r\n                    'https://httprequestt-default-rtdb.firebaseio.com/task.json',\r\n                    taskState.tasks\r\n                )\r\n            }),map(data=>{\r\n                console.log(data)\r\n            }),catchError(err=>{\r\n                console.log(err);\r\n                return of({})\r\n            })\r\n            \r\n            \r\n        )\r\n\r\n        \r\n    \r\n\r\n\r\n    constructor(private http:HttpClient, private acion$:Actions,private store:Store<TasksStore.AppState>){}\r\n}","import { R } from \"@angular/cdk/keycodes\";\r\nimport { Action } from \"@ngrx/store\";\r\nimport { UserTaskList } from \"src/app/user/userTaskList.module\";\r\nimport { TasksModule } from \"../tasks-model/tasks-model.module\";\r\nimport * as Tasks from './Task.Action';\r\n\r\nexport  interface State{\r\n  tasks:TasksModule[],\r\n  users:UserTaskList[],\r\n  updatingTask: TasksModule,\r\n  updatingIndex:number,\r\n}\r\n \r\n\r\n  const initializing:State = {\r\n    tasks:[ new TasksModule('business','first','first description',new Date(),new Date(),'yes',false,[],'ToDo')\r\n  \r\n  ],\r\n  users:[],\r\n  updatingTask:null,\r\n  updatingIndex:-1,\r\n  }\r\nexport  function TaskReducers(\r\n    //initializing the value\r\n    state:State=initializing ,\r\n    action:Tasks.TasksType\r\n    ){\r\nswitch(action.type){\r\n\r\n    case Tasks.Add_Task:\r\n      return  {\r\n            ...state,\r\n            //to select it at TaskList\r\n            tasks:[ ...state.tasks, action.payload\r\n                 \r\n                ]  \r\n\r\n\r\n        }\r\n    case Tasks.Add_Tasks :\r\n      console.log(action.payload)\r\n    return{\r\n      ...state,\r\n      tasks:[...action.payload]\r\n\r\n    }\r\n\r\n\r\n      case Tasks.Updated_Item:\r\n   const Task = state.updatingTask;\r\n   let updatingTask = {\r\n     ...Task,\r\n     ...action.payload\r\n   }\r\n  \r\n   const updatingTasks = [...state.tasks];\r\n   updatingTasks[state.updatingIndex]=updatingTask;\r\n\r\n   return{\r\n     ...state,\r\n     tasks:updatingTasks,\r\n     updatingTask:updatingTask,\r\n     updatingIndex:-1,\r\n\r\n     \r\n   }\r\n   case Tasks.ADD_INNER:\r\n\r\n    \r\n     \r\n     \r\n    \r\n     const TaskUSer = state.updatingTask;\r\n   \r\n    return{\r\n        ...state,\r\n    \r\n        users:[\r\n          ...state.users,\r\n           action.payload\r\n          \r\n          ]\r\n           }\r\n    case Tasks.Deleted_Item:\r\n     \r\n      return {...state,\r\n        tasks: state.tasks.filter((ig,igIndex)=>{\r\n         return  igIndex !== action.payload\r\n        }),\r\n        \r\n \r\n\r\n\r\n      }\r\n\r\n      case Tasks.StartEdit:\r\n        return{\r\n          ...state,\r\n          updatingIndex: action.payload,\r\n          updatingTask:{...state.tasks[action.payload]}\r\n\r\n        }\r\n\r\n\r\n      case Tasks.stopEdit:\r\n        return {\r\n          ...state,\r\n          updatingIndex:-1,\r\n        updatingTask:null \r\n\r\n\r\n\r\n        }\r\n      \r\ncase Tasks.TITLEEDIT:\r\n  const TitleTaskB = state.updatingTask;\r\n  const UTaskTitle = {\r\n    ...TitleTaskB,\r\n    projectTitle:action.payload\r\n  }\r\n  const UpdatingTasksTitle = [...state.tasks] ;\r\n\r\n  UpdatingTasksTitle[state.updatingIndex] = UTaskTitle;\r\n        \r\nreturn{\r\n  ...state,\r\n  tasks:UpdatingTasksTitle,\r\n  updatingTask:UTaskTitle,\r\n  updatingIndex:-1\r\n}\r\n\r\ncase Tasks.TASKTYPEDIT:\r\n  let TASKTYPEDIT = state.updatingTask\r\n\r\n const updateTaskType = {\r\n   ...TASKTYPEDIT,\r\n   taskType:action.payload\r\n };\r\n let updatingATasksType = [...state.tasks];\r\n updatingATasksType[state.updatingIndex]=updateTaskType\r\n\r\nreturn {\r\n  ...state,\r\n  tasks:updatingATasksType,\r\n  updatingTask:updateTaskType,\r\n  updatingIndex:-1,\r\n\r\n  \r\n}\r\ncase Tasks.TAGS:\r\n  let Tags = state.updatingTask\r\n\r\n const updateTaskTag = {\r\n  ...Tags,\r\n tags:[\r\n   ...Tags.tags,\r\n   action.payload]\r\n };\r\n let updatingATasksTags = [...state.tasks];\r\n updatingATasksTags[state.updatingIndex]=updateTaskTag\r\nreturn {\r\n  ...state,\r\n  tasks:updatingATasksTags,\r\n  updatingTask:updateTaskTag,\r\n  updatingIndex:-1,\r\n\r\n  \r\n}\r\ncase Tasks.DELETETAG:\r\n\r\nconst updatingTaskTag = state.updatingTask;\r\n// updatingTaskTag.tags.splice(acti on.payload,1);\r\n\r\n\r\n\r\nconsole.log(updatingTaskTag)\r\n  return{...state    // updatingTask:updatingTask.tags.splice(action.payload,1)\r\n  }\r\n\r\n\r\ncase Tasks.SCEdit:\r\n  let SCEdit = state.updatingTask\r\n\r\n const updateTaskDate = {\r\n  ...SCEdit,\r\n  scheduleStart:action.payload.start,\r\n  scheduleEnd:action.payload.end\r\n };\r\n let updatingATasksDate = [...state.tasks];\r\n updatingATasksDate[state.updatingIndex]=updateTaskDate\r\nconsole.log(updateTaskDate)\r\nreturn {\r\n  ...state,\r\n  tasks:updatingATasksDate,\r\n  updatingTask:updateTaskDate,\r\n  updatingIndex:-1,\r\n\r\n  \r\n}\r\n\r\n\r\ncase Tasks.ActiveProject:\r\n  let task = state.updatingTask\r\n\r\n const updateTask = {\r\n   ...task,\r\n   statues:action.payload\r\n };\r\n let updatingATasks = [...state.tasks];\r\n updatingATasks[state.updatingIndex]=updateTask\r\n\r\nreturn {\r\n  ...state,\r\n  tasks:updatingATasks,\r\n  updatingTask:updateTask,\r\n  updatingIndex:-1,\r\n\r\n  \r\n}\r\ncase Tasks.PROGRESS_VALUE:\r\n  const TASKWITHPROGRESS = state.updatingTask\r\n  const updateTaskProgress = {\r\n    ...TASKWITHPROGRESS,\r\n    progress:action.payload\r\n  }\r\n  const ALLTASKS =[...state.tasks]\r\n  ALLTASKS[state.updatingIndex] = updateTaskProgress,\r\n  console.log(ALLTASKS)\r\nreturn {\r\n  ...state,\r\n  tasks: ALLTASKS,\r\n  updatingTask:updateTaskProgress,\r\n  updatingIndex:-1\r\n\r\n}\r\ncase Tasks.DESCRIPTIONEDIT:\r\n  const DESCRIPTIONEDIT = state.updatingTask\r\n  const updateTaskDESCRIPTIONEDIT = {\r\n    ...DESCRIPTIONEDIT,\r\n    description:action.payload\r\n  }\r\n  const ALLTASKSDESCRIPTION =[...state.tasks]\r\n  ALLTASKSDESCRIPTION[state.updatingIndex] = updateTaskDESCRIPTIONEDIT;\r\nreturn {\r\n  ...state,\r\n  tasks: ALLTASKSDESCRIPTION,\r\n  updatingTask:updateTaskDESCRIPTIONEDIT,\r\n  updatingIndex:-1\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\ncase Tasks.PIORTYEDIT:\r\n  const PIORTYEDIT = state.updatingTask\r\n  const updateTaskPIORTYEDIT = {\r\n    ...PIORTYEDIT,\r\n    piorty:action.payload\r\n  }\r\n  const ALLTASKSPiorty =[...state.tasks]\r\n  ALLTASKSPiorty[state.updatingIndex] = updateTaskPIORTYEDIT;\r\nreturn {\r\n  ...state,\r\n  tasks: ALLTASKSPiorty,\r\n  updatingTask:updateTaskPIORTYEDIT,\r\n  updatingIndex:-1\r\n\r\n}\r\n\r\ncase Tasks.setGroupOwner:\r\n  const TASKWITHOUTGA = state.updatingTask;\r\n  const updatingTASKWITHGO= {\r\n    ...TASKWITHOUTGA,\r\n    group:action.payload.group,\r\n    owner:action.payload.owner\r\n  };\r\n  console.log(updatingTASKWITHGO)\r\n  const UPDATINGATASKSWITHOG = [...state.tasks];\r\n  UPDATINGATASKSWITHOG[state.updatingIndex] = updatingTASKWITHGO;\r\n  console.log(UPDATINGATASKSWITHOG)\r\n  return {\r\n    ...state, \r\n    tasks:UPDATINGATASKSWITHOG,\r\n    updatingTask:updatingTASKWITHGO,\r\n    updatingIndex:-1\r\n  }\r\n\r\n\r\ndefault:return state;\r\n      }\r\n\r\n\r\n\r\n}","// import {  Effect,Actions, ofType } from \"@ngrx/effects\";\r\nimport { HttpClient, HttpErrorResponse } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { Router } from \"@angular/router\";\r\nimport { Actions, createEffect, Effect, ofType } from \"@ngrx/effects\";\r\nimport { of } from \"rxjs\";\r\nimport { catchError, switchMap ,map, tap} from \"rxjs/operators\";\r\nimport { User } from \"src/app/user/user.module\";\r\nimport * as fromAuthAction from './auth.actions'\r\nexport interface AuthRespose{\r\n    kind:string;\r\n    idToken:string;\r\n    email:string;\r\n    refreshToken:string;\r\n    expiresIn:string;\r\n    localId:string;\r\n    // ?this is mean that it's optional\r\n    registered?:boolean;  \r\n}\r\n@Injectable()\r\n\r\nexport  class AuthEffects {\r\n    @Effect()\r\n    authSignUp = this.action$.pipe(\r\n        ofType(fromAuthAction.Sin_Up_start),\r\n        switchMap((siUpdata:fromAuthAction.signUpStart)=>{\r\n            return this.http\r\n.post<AuthRespose>(\r\n    `https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyCxSIovXABL9J3NBNV1PRXNtW_a_5ZEO1s`\r\n    ,\r\n{\r\n    email:siUpdata.payload.email,\r\n    password:siUpdata.payload.password,\r\n    returnSecureToken:true\r\n}\r\n).pipe(\r\n    map(data=>{\r\n        const expressionDate =new Date( new Date().getTime() + +data.expiresIn*1000)\r\n\r\n        return new fromAuthAction.Signup(\r\n            {email:data.email\r\n                ,userId:data.localId\r\n                ,token:data.idToken,\r\n                expirationDate:expressionDate}\r\n            )\r\n        \r\n\r\n    }),catchError(errRsp=>{\r\n  \r\n            let message = 'unkown Error occurced';\r\n            console.log(errRsp)\r\n            if(!errRsp.error||!errRsp.error.error){\r\n                return of(new fromAuthAction.LoginFaild(message));\r\n\r\n              }\r\n              switch(errRsp.error.error.message){\r\n                case 'EMAIL_EXISTS':\r\n                    message = 'this email exists already';\r\n                    break;\r\n                case \"EMAIL_NOT_FOUND\":\r\n                    message=\"this email does't exist\";\r\n                    break;\r\n                case \"INVALID_PASSWORD\":\r\n                    message= 'please enter valid passowrd';\r\n                    break;\r\n\r\n                }\r\n\r\n            return of( new fromAuthAction.LoginFaild(message))\r\n\r\n    })\r\n) \r\n\r\n        }),tap(()=>{\r\n            this.router.navigate(['/tasks'])\r\n        })\r\n        \r\n    )\r\n\r\n    @Effect()\r\n    authLogin =   this.action$.pipe(\r\n        ofType(fromAuthAction.login_start),\r\n    switchMap((authData:fromAuthAction.LoginStart)=>{\r\n        return this.http.post<AuthRespose>(\r\n            'https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyCxSIovXABL9J3NBNV1PRXNtW_a_5ZEO1s'\r\n            ,        {\r\n                        email:authData.payload.email,\r\n                        password:authData.payload.password,\r\n                        returnSecureToken:true\r\n                    \r\n                    }\r\n            \r\n        ).pipe(\r\n            map(AuthData=>{\r\n                const expressionDate =new Date( new Date().getTime() + +AuthData.expiresIn*1000)\r\n     \r\n\r\n                return new fromAuthAction.login(\r\n                        {email:AuthData.email\r\n                            ,userId:AuthData.localId\r\n                            ,token:AuthData.idToken,\r\n                            expirationDate:expressionDate}\r\n                        )\r\n\r\n            }),\r\n            tap(AuthSucces=>{\r\n                // const expressionDate =new Date( new Date().getTime() + +AuthSucces.payload.*1000)\r\n                const user = new User(\r\n                   AuthSucces.payload.userId,\r\n                   AuthSucces.payload.email,\r\n                   AuthSucces.payload.token\r\n                   ,AuthSucces.payload.expirationDate);\r\n\r\n                   localStorage.setItem('user',JSON.stringify( user));\r\n                   this.router.navigate(['tasks'])\r\n            }),\r\n            catchError((errRsp)=>{\r\n                let message = 'unkown Error occurced';\r\n                console.log(errRsp)\r\n                if(!errRsp.error||!errRsp.error.error){\r\n                    return of(new fromAuthAction.LoginFaild(message));\r\n\r\n                  }\r\n                  switch(errRsp.error.error.message){\r\n                    case 'EMAIL_EXISTS':\r\n                        message = 'this email exists already';\r\n                        break;\r\n                    case \"EMAIL_NOT_FOUND\":\r\n                        message=\"this email does't exist\";\r\n                        break;\r\n                    case \"INVALID_PASSWORD\":\r\n                        message= 'please enter valid passowrd';\r\n                        break;\r\n\r\n                    }\r\n\r\n                return of( new fromAuthAction.LoginFaild(message))\r\n            })\r\n        )\r\n        })\r\n)\r\n\r\n\r\nautoLOGIN = createEffect(()=>\r\n    \r\n    this.action$.pipe(\r\n        ofType(fromAuthAction.AutoLogIn),\r\n        map(()=>{\r\n            const userData:{\r\n                id:string ,\r\n                email: string,\r\n                _token:string ,\r\n                  _tokenExprationDate:string,\r\n            }\r\n            = JSON.parse(localStorage.getItem('user'));\r\n            if(userData){\r\n                const loadedData =\r\n        new User(\r\n            userData.id,\r\n            userData.email,\r\n            userData._token,\r\n            new Date(userData._tokenExprationDate));\r\n            if(loadedData.token){\r\n    \r\n                return new fromAuthAction.login(\r\n                    {\r\n                    email:userData.email,\r\n                    userId:userData.id,\r\n                    token:userData._token,\r\n                    expirationDate:new Date(userData._tokenExprationDate)\r\n                    }\r\n                    \r\n                    )\r\n            }\r\n            return {type:'dummy'}\r\n        }\r\n        return {type:'dummy'}\r\n    \r\n    \r\n            \r\n        })\r\n    )\r\n    ) \r\n    @Effect({dispatch:false})\r\nlogOut = this.action$.pipe(\r\n    ofType(fromAuthAction.LOGOUT),\r\n    map(()=>{\r\n        localStorage.removeItem('user');\r\n        this.router.navigate(['/home']);\r\n        return new fromAuthAction.LogOut();\r\n    })\r\n)\r\n\r\n \r\n@Effect({dispatch:false})\r\nloginSucces = this.action$.pipe(\r\n    ofType(fromAuthAction.AuthenticatedSucces),\r\n    tap(()=>{\r\n        // this.router.navigate(['/tasks/0'])\r\n    })\r\n\r\n)\r\n\r\nconstructor(private action$:Actions, private http:HttpClient,private router:Router){}\r\n\r\n}","import {  Component,  Inject,  Input,  OnInit, ViewChild} from '@angular/core';\nimport {FormGroup, FormControl, FormBuilder, Validators, NgForm} from '@angular/forms';\nimport {  MatDialogRef } from '@angular/material/dialog';\nimport { Store } from '@ngrx/store';\nimport{TasksModule} from '../tasks-model/tasks-model.module';\nimport * as tasksActions from '../store/Task.Action'\nimport * as $ from 'jquery';\nimport { AppState } from 'src/app/store/app.reducer';\nimport { TaskModule } from '../tasks.module';\n\nexport interface Tag {\n  name: string;\n};\n\n@Component({\n  selector: 'app-task-dialog',\n  templateUrl: './task-dialog.component.html',\n  styleUrls: ['./task-dialog.component.scss']\n})\n\n\n\nexport class TaskDialogComponent implements OnInit {\n  other:boolean = false;\n  role:boolean=true;\n  personalSelected:boolean=false;\n  selected = 'business';\n  selectedD = 'active';\n  editMode=false;\n  typesOfRoles: string[] = ['Hr', 'Hr analyst ', 'Hr Team Lead', 'Hr Business Partner','presonal'];\n  roleI;\n  Task:TaskModule;\n  business:boolean=false;\n  Notes:string[]=[];\n  List:string[]=[];\n  TypeSelected:string= \"ToDo\";\n@ViewChild('info',{static:false}) TaskInfo:NgForm;\n  charac: any;\nconstructor(   \n     public dialogRef: MatDialogRef<TaskDialogComponent>,\n     private store:Store<AppState>,\n    \n    ){}\n    range = new FormGroup({\n      start: new FormControl(),\n      end: new FormControl(),\n    });\n\n  \n\n  ngOnInit(){\n   \n   \n// this.store.select('Tasks').subscribe(state=>{\n\n//   if(state.updatingIndex>-1 &&state.updatingTask!==null){\n    \n//     this.editMode = true;\n//     this.taskAdd.setValue({\n      \n//      'title':state.updatingTask.title,\n//      'description':state.updatingTask.description,\n   \n//      'scheduleStart':state.updatingTask.scheduleStart,\n     \n//      'scheduleEnd':state.updatingTask.scheduleEnd,\n     \n     \n//                'owner':state.updatingTask.owner,\n   \n   \n          \n   \n//                    // 'piorty':new FormControl('option1'), \n//                    'notify':state.updatingTask.notify,\n   \n//                    'taskType':state.updatingTask.taskType,\n//                    'statues':state.updatingTask.statues\n   \n//     })\n//   }\n//   else{\n//     this.editMode=false;\n//     this.taskAdd.reset()\n//   }\n\n\n\n\n\n\n\n  \n  \n\n  }\n\n\n  roleSubmitted(role){\n    this.role = false;\n    this.roleI=role.value.roleInfo;\n \n    if(role.value.roleInfo==='business'){\n      this.business = true;\n\n    }\n    else if(role.value.roleInfo==='personal'){\n      this.business = false\n    }\n\n  }\n  close(i){\n    console.log(i)\n    this.Notes.splice(i,1)\n      }\n\n\n  \n  deleteList(i){\n    this.List.splice(i,1)\n  }\n\n\n    formSubmitted(i){\n  \n      const selectedRole = this.roleI;\n    \n      const companyName = i.value.companyName \n      const notify = i.value.notify \n      const projectTitle = i.value.projectTitle \n      const description = i.value.description \n      const scheduleStart:Date  = i.value.start \n      const scheduleEnd:Date  = i.value.end \n\n      // console.log(i)\n      const Taskinfo:TasksModule = {\n        selectedRole,\n        projectTitle,\n        description,\n        scheduleStart,\n        scheduleEnd,\n        notify,\n        statues:false,\n        companyName,\n        tags:[]\n    }\n     \n        this.store.dispatch(new tasksActions.AddTask(Taskinfo));\n        this.editMode =false;\n        this.dialogRef.close();\n        \n        i.reset();\n        \n   \n      \n\n      this.store.select('Tasks').subscribe(tasks=>{\n        console.log(tasks)\n      })\n    }\n\n\n \n      ngOnDestroy(): void {\n     this.store.dispatch(new tasksActions.StopEdit())\n      }\n\n \n}\n","<form   #info=\"ngForm\" (ngSubmit)=\"formSubmitted(info)\">\n  <div class=\"add-task-header\" style=\"display: flex;\" *ngIf=\"!role\">\n    \n    <h1 class=\"addTaskText\" style=\"width:70%\" >\n      Add Task\n    </h1>\n    <div class=\"d-grid gap-2 d-md-flex justify-content-md-end  button\" style=\"width: 30%;\">\n      <div class=\"example-button-row\">\n        <button mat-raised-button  type=\"reset\">reset</button>\n        <button  [disabled]=\"!info.valid\" type=\"submit\" mat-raised-button class=\"ml-2\" color=\"primary\">save</button>\n        </div>\n     \n    </div>\n  </div>\n  <div class=\"roule row\">\n<div class=\"col-md-12\" *ngIf=\"role\">\n \n\n  <div class=\"taskRole\">\n    <form #roles=\"ngForm\" (ngSubmit)=\"roleSubmitted(roles)\">\n<p>select your role <mat-icon class=\"icon\">task</mat-icon>:</p>\n<mat-form-field appearance=\"fill\">\n  <mat-select value=\"roles\" name=\"roleInfo\" ngModel required >\n    <!-- <mat-option value=\"Hr\">Hr</mat-option> -->\n    <mat-option value=\"business\">business</mat-option>\n    <mat-option value=\"personal\">personal</mat-option>\n    <!-- <mat-option value=\"option3\">Option 3</mat-option> -->\n  </mat-select>\n</mat-form-field>\n    <!-- <p>\n      Option selected: {{role.selectedOptions.selected[0]?.value}}\n\n    </p> -->\n    <mat-form-field class=\"example-full-width\" appearance=\"fill\" *ngIf=\"other\">\n      <mat-label>other </mat-label>\n      <input matInput name=\"other\" ngModel >\n    </mat-form-field>\n    <button  type=\"submit\" [disabled]=\"!roles.valid\"  class=\"next\" mat-button color=\"primary\">next</button>\n  </form>\n  </div>\n\n    \n\n</div>\n\n  </div>\n\n\n<div class=\"row add-task\" style=\"overflow: auto;\" *ngIf=\"!role\">\n    <div class=\" col-md-7 left\">\n\n      <div class=\"row_1\">\n\n\n      <div class=\"companyname \"  *ngIf=\"business\">\n        <mat-form-field class=\"example-full-width\" appearance=\"fill\" >\n          <mat-label>Company</mat-label>\n          <input matInput   value=\"company name\" name=\"companyName\" ngModel> \n        </mat-form-field>\n\n      </div>\n        <div class=\"title  \" >\n          <mat-form-field class=\"example-full-width\" appearance=\"fill\">\n            <mat-label > Project Title</mat-label>\n            <input matInput  [(ngModel)]=\"title\" required  name=\"projectTitle\" ngModel>\n          </mat-form-field>\n        </div>\n      </div>\n\n        <div class=\"description mt-3  mb-5\" >\n          <mat-form-field style=\"width: 100%;\" appearance=\"legacy\">\n            <mat-label>type your Description...</mat-label>\n            <input [(ngModel)]=\"des\" required  matInput placeholder=\"Description\" \n            name=\"description\" ngModel>\n            <mat-icon matSuffix>description</mat-icon>\n            <mat-hint>28/1000</mat-hint>\n          </mat-form-field>\n           <div class=\"_description mt-2\" *ngIf=\" des|| title\" >\n            <p>{{title}}</p> \n           <p class=\"descriptionInput\">\n            {{des}}\n           </p> </div>\n        </div>\n<div class=\"group flex\">\n\n<div class=\"notify ml-3\">\n  <mat-form-field class=\"mat-input\"  >\n    <mat-label>notify me</mat-label>\n    <mat-select  name=\"notify\" ngModel >\n      <mat-option  value=\"yes\">Yes</mat-option>\n      <mat-option value=\"yes\">No</mat-option>\n    </mat-select>\n  </mat-form-field>\n\n</div>\n\n\n</div>\n   \n\n    </div>\n    <div class=\" col-md-5   right\">\n\n     \n     \n\n        <div class=\"schadul mt-1 \" >\n          <mat-expansion-panel class=\"exptional\" [expanded]=\"true\">\n            <mat-expansion-panel-header>\n              <mat-panel-title>\n                Date\n              </mat-panel-title>\n             \n            </mat-expansion-panel-header>\n            <mat-form-field appearance=\"fill\">\n              <mat-label>Enter a date range</mat-label>\n              <mat-date-range-input  [rangePicker]=\"picker\">\n                <input matStartDate name=\"start\" ngModel  placeholder=\"Start date\" required>\n                <input matEndDate  name=\"end\" ngModel placeholder=\"End date\" required>\n              </mat-date-range-input>\n              <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n              <mat-date-range-picker #picker></mat-date-range-picker>\n            \n              <mat-error *ngIf=\"range.controls.start.hasError('matStartDateInvalid')\">Invalid start date</mat-error>\n              <mat-error *ngIf=\"range.controls.end.hasError('matEndDateInvalid')\">Invalid end date</mat-error>\n            </mat-form-field>\n          \n            <!-- <mat-form-field class=\"example-form-field\" style=\"width: 200px;\">\n              <mat-label class=\"mr-2\">schedule start</mat-label>\n              <mat-label>schedule end</mat-label>\n              <mat-date-range-input\n             \n                \n                >\n                <input matStartDate placeholder=\"Start date\" name=\"start\" ngModel >\n             \n                <input matEndDate placeholder=\"End date\" name=\"end\" ngModel>\n            \n              </mat-date-range-input>\n              <mat-datepicker-toggle matSuffix [for]=\"campaignOnePicker\"></mat-datepicker-toggle>\n              <mat-date-range-picker #campaignOnePicker></mat-date-range-picker>\n            </mat-form-field> -->\n          </mat-expansion-panel>\n            \n      </div>\n \n     \n        <div class=\"formupload\">\n            <mat-expansion-panel class=\"exptional\">\n    <mat-expansion-panel-header>\n      <mat-panel-title>\n        Attachments\n      </mat-panel-title>\n     \n    </mat-expansion-panel-header>\n    <p>Attachments</p>\n    <input type=\"file\">  </mat-expansion-panel>\n            <!-- Upload  -->\n  \n            </div>\n    </div>\n\n    <div class=\" col mt-1 subTask\">\n      <!-- <div class=\"addTask mb-2 \">\n\n        <mat-expansion-panel [expanded]=\"true\">\n          <mat-expansion-panel-header>\n            <mat-panel-title>\n <mat-icon class=\"icon\">add_task</mat-icon> To Do List:            </mat-panel-title>\n  \n          </mat-expansion-panel-header>\n          <ul class=\"list-group\" *ngFor=\"let list of List;let i = index\">\n            <li class='list-group-item ' style=\"display: flex; \">\n              <p style=\"width: 83%; margin-left:1%\"> \n                {{list}}\n          </p>\n              <div class=\"edit\">\n              <mat-icon class=\"mr-2 icon\" (click)=\"edit(i)\">edit</mat-icon>\n                <mat-icon  class=\"icon\" (click)=\"deleteList(i)\" >close</mat-icon>\n              </div>\n            </li>\n          \n          \n          </ul>\n\n<div class=\"input\">\n  <mat-form-field style=\"width: 100%;\" appearance=\"legacy\">\n    <mat-label>type your Tasks and important things ...</mat-label>\n    <input matInput #todolist placeholder=\"Task\">\n    <mat-icon (click)=\"addToDoList(todolist)\" matSuffix>task</mat-icon>\n    <mat-hint>28/1000</mat-hint>\n  </mat-form-field>\n</div>\n        </mat-expansion-panel>\n      </div> -->\n\n\n\n      <!-- <div class=\"addNote\">\n\n        <mat-expansion-panel [expanded]=\"true\">\n          <mat-expansion-panel-header>\n            <mat-panel-title>\n<mat-icon class=\"icon\">note_add</mat-icon> add Note:            \n\n</mat-panel-title>\n        \n          </mat-expansion-panel-header>\n<ul class=\"list-group\" *ngFor=\"let note of Notes;let i = index\">\n  <li class='list-group-item ' style=\"display: flex; \">\n    <p style=\"width: 83%; margin-left:1%\"> \n      {{note}}\n</p>\n    <div class=\"edit\">\n  <mat-icon class=\"mr-2 icon\" (click)=\"edit(i)\">edit</mat-icon>\n      <mat-icon  class=\"icon\" (click)=\"close(i)\" >close</mat-icon>\n    </div>\n  </li>\n\n\n</ul>\n\n<div class=\"input\">\n  <mat-form-field style=\"width: 100%;\" appearance=\"legacy\">\n    <mat-label>type your note...</mat-label>\n    <input matInput placeholder=\"Note\" #note style=\"width: 86%;\">\n    <mat-icon (click)=\"addNote(note)\" matSuffix>note_add</mat-icon>\n\n    <mat-hint>28/1000</mat-hint>\n  </mat-form-field>\n</div>\n        </mat-expansion-panel>\n      </div> -->\n\n\n    </div>\n    <hr>\n\n  \n\n  </div>\n</form>","import { Component, ElementRef, Injectable, Input, OnDestroy, OnInit, ViewChild } from '@angular/core';\nimport {MatDialog, MatDialogRef, MAT_DIALOG_DATA} from '@angular/material/dialog';\nimport { ActivatedRoute, Params, Router } from '@angular/router';\nimport { Store } from '@ngrx/store';\nimport { Subscription } from 'rxjs';\nimport { TasksModule } from 'src/app/tasks/tasks-model/tasks-model.module';\nimport * as taskactions from '../../../store/Task.Action'\nimport { TaskDialogComponent } from 'src/app/tasks/task-dialog/task-dialog.component';\nimport { map } from 'rxjs/operators';\nimport { AppState } from 'src/app/store/app.reducer';\nimport { NgForm } from '@angular/forms';\nimport { InnerTask } from 'src/app/tasks/tasks-model/innerTask.module';\nimport {InnerTasks, UserTaskList } from 'src/app/user/userTaskList.module';\nimport  * as $ from 'jquery';\nimport { UserTaskLists } from 'src/app/tasks/store/Task.service';\nimport { TagsModule } from 'src/app/tasks/shared/loadingSpinner/tag.module';\n@Injectable()\n@Component({\n  selector: 'app-task-preview-dialog',\n  templateUrl: './task-preview-dialog.component.html',\n  styleUrls: ['./task-preview-dialog.component.scss','./avatar.scss','./users.scss']\n})\nexport class TaskPreviewDialogComponent implements OnInit ,OnDestroy {\n  @ViewChild('userTask') TaskForm:NgForm;\n  // @ViewChild('userMail',{static:false})\n  TitleEdit:boolean=false;\n  progressEdit:boolean=false;\n  descriptionEdit:boolean=false;\n  piortyEdit:boolean=false;\n  dateEdit:boolean = false;\n  taskEdit:boolean= false;\n  groupSubmitted:boolean=false;\n  USERaDDED:boolean=false;\n  innerTask:InnerTasks;\n  task:TasksModule;\n  bussiness:boolean=false;\n  id:number;\n  subsecription:Subscription;\n  deletingItem:number;\n  note;\n  owner:boolean=false;\n  list;\n  scStart;\n  scEnd;\n  users:UserTaskList[]=[];\n  group:number;\n  userstart: boolean;\n  adminName:string;\n  getUser;\n  panelOpenState = false;\n  ACtive:boolean=false;\n  selected:string= 'ToDo';\n  piorty:string = 'low'\n  value = 0;\n  tags:string[]= [];\n  errorMessage: string;\n  tag:string;\n  userId:number;\n  userExist:boolean;\n  mailDetail;\n  constructor(\n    public dialog: MatDialog, \n    private route:ActivatedRoute,\n    private store:Store<AppState>,\n    private router:Router,\n    private TaskS:UserTaskLists\n\n    ) { \n\n    }\n\n  ngOnInit(): void {\n    \n      \nthis.TaskS.tasks.subscribe(tasks=>{\n  this.users= tasks;\n\n  console.log(this.users)\n\n})\n   this.users = this.TaskS.getusers();\n    this.store.subscribe(tasks=>{\nconsole.log(tasks)\n\n    });\n   \n\n\n    this.subsecription =  this.route.params.subscribe((params:Params)=>{\n      this.id = +params['id'];\n       if(this.id !== null){\n\nthis.store.pipe(\nmap(taskState=>{\n  console.log(taskState)\n return taskState.Tasks.tasks.find((T,I)=>{\n  return I===this.id\n })\n\n})\n).subscribe(\n  Task=>{\n    //getting confuse with the new properties added!\n\n    this.scStart=Task.scheduleStart\n    this.scEnd=Task.scheduleEnd;\n\n\n    this.task =Task;\n    \n    console.log(Task)\n     if(Task.selectedRole==='business'){\n       this.bussiness =true\n      }else{\n\n        this.bussiness= false\n      }\n     \n  })\n    \n \n      }\n\n     \n    });\n  \n  }\n  activatedProject(){\n    \n    this.ACtive = !this.ACtive;\n\n      this.store.dispatch(new taskactions.StartEditing(+this.id));\n      this.store.dispatch(new taskactions.Activate(this.ACtive));\n      this.store.subscribe(tasks=>{\n\n// this.task = tasks.Tasks.updatingTask\n      });\n  this.ACtive = this.task.statues;\n\n\nconsole.log(this.task)\n  }\n  progressEditF(val){\n    this.progressEdit = !this.progressEdit;\n    if(!this.progressEdit){\n      this.store.dispatch(new taskactions.StartEditing(+this.id));\n      this.store.dispatch(new taskactions.ProgressVAlue(val))\n    }\n  }\n\n\n  start(e){\n    this.router.navigate(['taskStart'+'/' + this.id + '/'+ this.task.projectTitle]);\n    console.log(e)\n  }\ndelete(){\nthis.store.dispatch(new taskactions.Deleting(this.id))\n}\n\n  edit(){\n\n  \n      this.store.dispatch(new taskactions.StartEditing(+this.id));\n    \n      this.store.subscribe(tasks=>{\n\n        // this.task = tasks.Tasks.updatingTask\n              })\n      \n\n      this.dialog.open(TaskDialogComponent).afterClosed().subscribe(()=>{\nthis.store.dispatch(new taskactions.StopEdit())\n\n\n      })\n\n      \n\n\n  }\n\n  full(e){\n\n    \n    \n      e.path[6].children[0].children[0].classList.toggle('none');\n    e.path[4].classList.toggle('col-md-12')\n\n}\n\nsaveTask(){\n  this.store.dispatch(new taskactions.StoreTasks())\n};\n\n\nonGroupSubmit(g:NgForm){\n  this.userstart= true\n  const owner:string = g.value.owner;\n  this.group = g.value.group;\n  console.log(this.group)\n  this.adminName=owner;\n  if(g.value.owner===''&&g.value.group===0){\n  this.userstart= false\n\n    return\n  }\n  console.log(g.value)\nthis.store.dispatch(new taskactions.StartEditing(+this.id))\n  this.store.dispatch(new taskactions.GroupAndOwner({group:this.group,owner:this.adminName}));\n  this.store.subscribe(tasks=>{\n\n    // this.task = tasks.Tasks.updatingTask\n          })\n          console.log(this.task)\n  this.groupSubmitted = !this.groupSubmitted\n  }\n  selectedTypeSubmit(select){\n    this.store.dispatch(new taskactions.StartEditing(+this.id));\n    this.store.dispatch(new taskactions.TaskType(select)); \n  // this.store.subscribe(tasks=> this.task = tasks.Tasks.updatingTask  );\n  if(this.task.taskType){\n\n    this.selected = this.task.taskType;\n    console.log(this.selected)\n  }else{\n    this.selected = 'ToDo'\n  }\n}\n\ntitleEdit(title){\n  this.store.dispatch(new taskactions.StartEditing(+this.id));\n  this.store.dispatch(new taskactions.TitleEdit(title.value.trim()));\n  this.TitleEdit=false;\n  // this.store.subscribe(tasks=> this.task = tasks.Tasks.updatingTask  )\n\n}\ndescreptionEdit(description){\n  this.store.dispatch(new taskactions.StartEditing(+this.id));\n  this.store.dispatch(new taskactions.DescriptionEdit(description.value.trim()));\n  // this.store.subscribe(tasks=> this.task = tasks.Tasks.updatingTask)\n  this.descriptionEdit =false;\n}\npiortySubmitted(P){\n  this.store.dispatch(new taskactions.StartEditing(+this.id));\n  this.store.dispatch(new taskactions.PiortyEdit(P));\n  this.piortyEdit = false;\n  // this.store.subscribe(tasks=> this.task = tasks.Tasks.updatingTask);\n  \n\n\n}\nNEWDATESUBMITTED(form){\n  this.store.dispatch(new taskactions.StartEditing(+this.id));\n  if(form.value.SchStart===\"\"&&form.value.schEnd===\"\"){\n    this.store.dispatch(new taskactions.Schedit({start:this.scStart,end:this.scEnd}));\n  }else if(form.value.SchStart===\"\" &&form.value.SchEnd!==\"\"){\n    this.store.dispatch(new taskactions.Schedit({start:this.scStart,end:form.value.SchEnd}));\n\n  }\n  else if(form.value.SchEnd===\"\" &&form.value.SchStart!==\"\"){\n    this.store.dispatch(new taskactions.Schedit({start:form.value.SchStart,end:this.scEnd}));\n\n  }else{\n    this.store.dispatch(new taskactions.Schedit({start:form.value.SchStart,end:form.value.SchEnd}));\n    \n  }\n  // this.store.subscribe(tasks=> this.task = tasks.Tasks.updatingTask)\nconsole.log(this.task);\nthis.dateEdit=false\n\n}\n\n\naddTag(tag){\n  const TagsM =new TagsModule(tag.value) ;\n  var maxLength = 15;\n   if(tag.value.length > maxLength){\n    this.errorMessage='too many character';\n    // this.charac = tag.value.length\n     return false;\n   }\n\n   this.tags.push(tag.value);\n \nthis.store.dispatch(new taskactions.StartEditing(+this.id))\n  this.store.dispatch(new taskactions.Tags(TagsM)) ;\n  this.store.subscribe(tasks=>console.log(tasks))\n\n   tag.value = '';\n \n   return true;\n\n}\ndeleteTag(i){\n  // this.tags.splice(i,1);\n  this.store.dispatch(new taskactions.StartEditing(+this.id))\n  this.store.dispatch(new taskactions.deleteTag(i)) \n  this.store.subscribe(tasks=>console.log(tasks))\n  console.log(this.tags)\n}\n//user edit \n\ndeleteUser(list){\n  this.mailDetail = list\n  $(list).css({\n    display:'none'\n  })\n  this.TaskS.deleteUSer(this.userId);\n  this.getUser = [];\n  \n}\n  addUser(userI: any){\n    if(userI.value.trim() === ''){\n      return\n    }\n    const innerTaSks = new InnerTasks('','',new Date(),new Date())\nconst user  = new UserTaskList(userI.value,[innerTaSks]);\nthis.TaskS.addusers(user);\n this.TaskS.tasks.subscribe(users=>{\nthis.users = users\n})\n// console.log(this.users)\n\n\n  }\nuserClicked(i){\n  this.userId = i;\n  this.getUser = this.TaskS.getUser(i);\n  $(this.mailDetail).css({\n    display:'block'\n  })\n \n}\naddUserTask(form){\nif(!this.taskEdit){\n  const InnrTasks = new InnerTasks(form.value.title.trim(),form.value.description.trim(),form.value.start,form.value.end)\nconsole.log(InnrTasks);\nthis.TaskS.addInnerTask(this.userId,InnrTasks);\nthis.TaskS.tasks.subscribe(tasks=>{\n  console.log(tasks)\n})\n}else{\n \n  const InnrTasks = new InnerTasks(form.value.title.trim(),form.value.description.trim(),form.value.start,form.value.end);\nthis.TaskS.editInnerTask(this.userId,this.id,InnrTasks);\nthis.innerTask = this.TaskS.getInnerTask(this.userId,this.id);\n\nthis.taskEdit =false;\n}\n\nform.reset()\n}\ndeleteInnerTask(i,TP){\n  this.TaskS.DeleteinnerTask(this.userId,i);\n\n  this.innerTask = this.TaskS.getInnerTask(this.userId,i);\n\n}\nTaskClicked(i,list){\n  $(list).click(function(){\n    $(this).addClass('user_active').siblings().removeClass('user_active')\n  });\n  this.id = i\n  this.innerTask = this.TaskS.getInnerTask(this.userId,i);\n\n  // this.deleteInnerTask(i);\n\n}\neditTask(){\n  const userTask =  this.TaskS.getInnerTask(this.userId,this.id);\n this.TaskForm.setValue({\n   'title':userTask.taskTitle,\n   'description':userTask.TaskDescription,\n   'start':userTask.startIn,\n   'end':userTask.endat\n\n });\n console.log(this.TaskForm,userTask)\n\n  this.taskEdit=true;\n\n}\n  ngOnDestroy(): void {\n    this.subsecription.unsubscribe();\n    this.store.dispatch(new taskactions.StopEdit())\n    \n  }\n\n}\n\n","\n\n<div class=\"top_bar flex\" >\n  <div class=\"taskname\" style=\"width: 70%; font-size: 20px;\">\n   <p class=\"title\">{{task.projectTitle}} <mat-icon (click)=\"TitleEdit = !TitleEdit\" style=\"cursor: pointer;\" >edit</mat-icon> </p> \n\n  </div>\n  <div class=\"tob_bar_edit \">\n\n      <mat-icon (click)=\"full($event)\" class=\"material-icons-outlined icon\"\n      matTooltip=\"fullscreen\" \n      aria-label=\"Button that displays a tooltip when focused or hovered over\"\n      >\n        fullscreen\n        </mat-icon>\n\n  </div>\n  \n</div>\n\n<div class=\"preview\" style=\"position: relative;\">\n  <div class=\"d-flex edit_Title\" *ngIf=\"TitleEdit\">\n    <p>edit title</p>\n    <form  (ngSubmit)=\"titleEdit(title)\">\n      <mat-form-field appearance=\"outline\">\n        <mat-label>title</mat-label>\n        <input #title [value]=\"task.projectTitle\"  matInput placeholder=\"title\">\n        <mat-icon matSuffix>save</mat-icon>\n      </mat-form-field>\n      </form>\n  </div>\n  <div class=\"top_bar_info\">\n    <div class=\"row\">\n  \n  <div class=\"col-md-5 toBar_left\">\n  <div class=\"progress-type flex\">\n\n    \n  <form  (ngSubmit)=\"selectedTypeSubmit(selected)\">\n  <mat-form-field appearance=\"legacy\">\n    <mat-label>{{selected}}</mat-label>\n    <mat-select [(value)]=\"selected\"[value]=\"task.taskType?task.taskType:'ToDo'\">\n      <mat-option value=\"ToDo\">ToDo </mat-option>\n      <mat-option value=\"INProgress\">INProgress</mat-option>\n      <mat-option value=\"Finished\">Finished</mat-option>\n    </mat-select>\n  </mat-form-field>\n  \n\n\n   <button mat-icon-button  type=\"submit\">\n    <mat-icon  class=\"done\"   matTooltip=\"save\">chevron_right</mat-icon> \n\n   </button> \n  \n</form>\n\n\n \n\n  </div>\n  <div class=\"statues\" style=\"padding: 10px;\">\n  statues\n  <div class=\"form-check form-switch\">\n    <input class=\"form-check-input\"\n     type=\"checkbox\" role=\"switch\"\n     (click)=\"activatedProject() \"\n    id=\"flexSwitchCheckChecked\" [checked]=\"task.statues\">\n<label for=\"flexSwitchCheckChecked\">{{task.statues?'activeted':'inactive'}} </label>\n  </div>\n<!-- \n  <mat-slide-toggle \n   [checked]=\"task.statues\" \n  \">{{task.statues?'active':'disactive'}}</mat-slide-toggle> -->\n  </div>\n  </div>\n  <div class=\"col-md-7 toBar_right flex\">\n  <div class=\"created_at mr-3\">\n    <p class=\"created_at\">CREATED</p>\n    <p class=\"created-itme\">        {{scStart.toDateString()}}\n    </p>\n  </div>\n  \n  <!-- <div class=\"timer_traker\">\n    <p class=\"timeTraker\">TIME TRACKED</p>\n    <p class=\"flex\">\n      <mat-icon (click)=\"startTimeTracker(\" class=\"mr-2\">play_circle_filled</mat-icon>\n      00.00.00\n    </p>\n  </div>\n   -->\n   <div class=\"deadline\">\n\n   <p class=\"timeStmate  mr-1\">\n     \n    <!-- <mat-icon  >hourglass_empty</mat-icon><br> -->\n    Dead Line  :<br>\n        {{scEnd.toDateString()}}\n   </p>\n\n   <button mat-icon-button [matMenuTriggerFor]=\"menu\" aria-label=\"Example icon-button with a menu\">\n    <mat-icon>reorder</mat-icon>\n  </button>\n  <mat-menu #menu=\"matMenu\">\n    <button (click)=\"edit()\" mat-menu-item>\n      <mat-icon>edit</mat-icon>\n      <span>edit</span>\n    </button>\n    \n    <button (click)=\"start($event)\" mat-menu-item>\n      <mat-icon>page</mat-icon>\n      <span>open in single page </span>\n    </button>\n    <button (click)=\"saveTask()\" mat-menu-item>\n      <mat-icon>save</mat-icon>\n      <span>save task</span>\n    </button>\n  </mat-menu>\n  <!-- <div class=\"timeStimateContainer\">\n    <div class=\"timeEstimateInput flex\" style=\"   \n  \n    padding: 16px;\">\n     \n  \n    </div>\n  \n   \n  </div> -->\n\n</div>\n  \n  </div>\n    </div>\n  \n  </div>\n  <div class=\"tolbar_data\">\n    <div class=\"row\">\n      <mat-tab-group class=\"col-md-12\">\n        <mat-tab label=\"info\">\n          <!-- [class]=\"bussiness?'col-md-5':'col-md-12'\" -->\n          <div class=\" left col-md-12\">\n            <div class=\"tolbar_data_progress\">\n              <!-- <>progress </p> -->\n              <section class=\"example-section\" >\n                <label class=\"example-margin\">Progress:</label>\n                <mat-slider class=\"example-margin\" mode=\"determinate\"\n                \n                style=\"width: 86%;\" \n                 [(ngModel)]=\"value\"\n                 [value]=\"value\"\n                 *ngIf=\"progressEdit\"></mat-slider>\n                <button mat-icon-button (click)=\"progressEditF(value)\" >\n\n                  <mat-icon>\n                    {{!progressEdit?'edit':'save'}}\n                  </mat-icon>\n                </button>\n              </section>\n\n             \n              <div class=\"progress\">\n\n                <mat-progress-bar mode=\"determinate\"\n                [value]=\"task.progress?task.progress:'0'\"\n                [value]=\"value\"></mat-progress-bar>\n\n              \n              </div>\n         \n            </div>\n            <div class=\"tolbar_data_discription\">\n            \n               <mat-expansion-panel class=\"exptional\" [expanded]=\"true\">\n                <mat-expansion-panel-header class=\"exptional\">\n                  \n                  <mat-panel-description>\n                <mat-icon class=\"icon\">description</mat-icon> Description: \n              \n                  </mat-panel-description>\n                </mat-expansion-panel-header>\n                \n            \n            <p>\n              {{task.description}} \n          <mat-icon style=\"cursor: pointer;\" (click)=\"descriptionEdit=!descriptionEdit\">edit</mat-icon>\n\n            </p>\n\n            <form *ngIf=\"descriptionEdit\"   (ngSubmit)=\"descreptionEdit(description)\">\n                <p>edit discription</p>\n                <mat-form-field  style=\"width: 80%;\" class=\"example-full-width\" appearance=\"outline\">\n                  <mat-label>description</mat-label>\n                  <textarea style=\"width: 100%;\" #description [value]=\"task.description\" class=\"w-100\"  \n                  matInput placeholder=\"description\"></textarea>\n                  \n                  <mat-icon matSuffix>save</mat-icon>\n                  \n                </mat-form-field>\n                <button mat-raised-button color=\"primary\" type=\"submit\"  style=\" \n                height: 36px;\n             margin: auto 10px;\">save</button>\n                </form>\n              </mat-expansion-panel>\n    \n    \n    \n            </div>\n\n            <div class=\"tags mt-1\">\n\n              <mat-expansion-panel  expendad=\"true\" class=\"exptional\">\n                <mat-expansion-panel-header>\n                  <mat-panel-title>\n          tags       \n                   </mat-panel-title>\n                 \n                </mat-expansion-panel-header>\n          \n                <mat-chip-list aria-label=\"Fish selection\" *ngIf=\"task.tags?task.tags:[]\"  >\n                 \n      \n                  <mat-chip  *ngFor=\"let tag of task.tags?task.tags:[];let i=index\" >{{tag.tag}}\n                      <mat-icon class=\"close\" (click)=\"deleteTag(i)\">cancel</mat-icon>\n                  </mat-chip>\n      \n                </mat-chip-list>\n                <mat-form-field appearance=\"legacy\"  style=\"width: 100%;\">\n                  <mat-label>Tags</mat-label>\n                  <input matInput #tag  placeholder=\"add project tags\">\n                  <mat-icon style=\"cursor: pointer;\"   (click)=\"addTag(tag)\"\n                  matTooltip=\"new tag\"\n          \n                  matSuffix>tag</mat-icon>\n                  <mat-hint>{{tag.value.length}}/15</mat-hint>\n                </mat-form-field>\n                <p  *ngIf=\"errorMessage\"style=\"color:\n                red\">{{errorMessage}}</p>\n              </mat-expansion-panel>\n          \n          </div>\n\n\n            <div class=\"tolnar_data_upload \">\n              <!-- <p class=\"flex\">Files <mat-icon>expand_more</mat-icon></p>\n              \n              <div class=\"add_files\">\n              \n                <p class=\"flex pr-3\">   \n                   Add File +</p>\n              </div> -->\n              <mat-expansion-panel class=\"exptional\" [expanded]=\"true\"     matTooltip=\"this action not avalible for now \"\n              matTooltipClass=\"example-tooltip-red\"\n              aria-label=\"Button that shows a red tooltip\">\n                <mat-expansion-panel-header class=\"exptional\">\n                  \n                  <mat-panel-description>\n                    \n                    <mat-icon class=\"icon ml-2\" >folder</mat-icon>Add Files:\n                  </mat-panel-description>\n                </mat-expansion-panel-header>\n            \n            <p>  Add File +</p>\n              </mat-expansion-panel>\n    \n    \n            </div>\n            <div class=\"piorty\" >\n              <!-- <p>piorty</p>\n              <p>important</p> -->\n              <mat-expansion-panel class=\"exptional\" [expanded]=\"true\">\n                <mat-expansion-panel-header class=\"exptional\">\n                  \n                  <mat-panel-description>\n            <p> piorty</p>\n            \n        \n                  </mat-panel-description>\n                </mat-expansion-panel-header>\n                <p>                  {{task.piorty?task.piorty:'low'}} \n                \n                  <mat-icon style=\"cursor: pointer;\" (click)=\"piortyEdit = !piortyEdit\">edit</mat-icon>\n                </p>\n                <div *ngIf=\"piortyEdit\">\n                  <form (ngSubmit)=\"piortySubmitted(piorty)\">\n                    <mat-form-field appearance=\"legacy\">\n                      <mat-select [(value)]=\"piorty\" [value]=\"task.piorty?task.piorty:'low'\">\n                        <mat-option>None</mat-option>\n                        <mat-option value=\"low\">low</mat-option>\n                        <mat-option value=\"medium\">medium</mat-option>\n                        <mat-option value=\"important\">important</mat-option>\n                      </mat-select>\n    \n                    </mat-form-field>\n    \n                    <button mat-raised-button color=\"primary\"  style=\" \n                    height: 36px;\n                 margin: auto 10px;\">save</button>\n                 </form>\n  \n                </div>\n         \n              </mat-expansion-panel>\n            </div>\n    \n            <div class=\"Date\">\n              <!-- <p class=\"startIn\"> start: 7/1/2022</p>\n              <p class=\"EndIn\">end: 5/1/2022</p> -->\n               <mat-expansion-panel class=\"exptional\" [expanded]=\"true\">\n        <mat-expansion-panel-header class=\"exptional\">\n          <mat-panel-title>\n        \n     <mat-icon class=\"icon\">date_range</mat-icon>\n     \n     <div class=\" d-flex\" style=\"justify-content: space-between; width: 300px;\">\n<p class=\"dateStart\"> {{scStart.toDateString()}}</p>\n\n<p class=\"dateEnd\"> {{scEnd.toDateString()}}</p>\n     </div>\n       </mat-panel-title>\n        </mat-expansion-panel-header>\n        \n        <p class=\"d-flex mr-3\" >change schduele Date  \n\n<mat-icon (click)=\"dateEdit=!dateEdit\" style=\"cursor:pointer\">edit</mat-icon>\n        </p>\n     \n        <div class=\"dateEdit\" *ngIf=\"dateEdit\">\n          <form  #form=\"ngForm\" (ngSubmit)=\"NEWDATESUBMITTED(form)\">\n          <div class=\"row\">\n            <div class=\"col-md-3\">\n              <mat-form-field appearance=\"legacy\" class=\"example-form-field\">\n                <mat-label>Choose a date</mat-label>\n                <input matInput [matDatepicker]=\"datepicker1\" [value]=\"scStart\" ngModel name=\"SchStart\">\n                <mat-datepicker-toggle matSuffix [for]=\"datepicker1\"></mat-datepicker-toggle>\n                <mat-datepicker #datepicker1>\n                  <mat-datepicker-actions>\n                    <button mat-button matDatepickerCancel>Cancel</button>\n                    <button mat-raised-button color=\"primary\" matDatepickerApply>Apply</button>\n                  </mat-datepicker-actions>\n                </mat-datepicker>\n              </mat-form-field>\n            </div>\n            <div class=\"col-md-3\">\n              <mat-form-field appearance=\"legacy\" class=\"example-form-field\">\n                <mat-label>Choose a date</mat-label>\n                <input matInput [value]=\"scEnd\" [matDatepicker]=\"datepicker2\" ngModel name=\"SchEnd\">\n                <mat-datepicker-toggle matSuffix [for]=\"datepicker2\"></mat-datepicker-toggle>\n                <mat-datepicker #datepicker2>\n                  <mat-datepicker-actions>\n                    <button mat-button matDatepickerCancel>Cancel</button>\n                    <button mat-raised-button color=\"primary\" matDatepickerApply>Apply</button>\n                  </mat-datepicker-actions>\n                </mat-datepicker>\n              </mat-form-field>\n         \n            </div>\n            <div style=\"text-align: right;\">\n              <button mat-raised-button color=\"primary\"  type=\"submit\" style=\" \n              height: 36px;\n           margin: auto 10px;\">save</button>\n            </div>\n          </div>\n        </form>   \n   \n    \n     \n    \n        </div>\n    \n      </mat-expansion-panel>\n            </div>\n        \n    \n        \n        \n          </div>\n        \n        </mat-tab>\n        <mat-tab label=\"Task List\"  *ngIf=\"bussiness\">\n<!-- <div class=\"dropBak\">\n  <p>on development !</p>\n</div> -->\n              <div class=\"header\">\n   \n                <div class=\"search-bar\">\n                 <input type=\"text\" placeholder=\"Search...\">\n                 \n                \n                </div>\n             \n             \n             \n               </div>\n                 <div class=\"row\">\n                   <div class=\"col-md-4 col-12\">\n                    <div class=\"inbox-container\">\n                      <div class=\"inbox\" >\n                       <div class=\"msg msg-department anim-y\">\n                        Task List\n                       \n                       </div>\n                         <mat-expansion-panel class=\"user_exptional\"\n                          (click)=\"userClicked(i)\" *ngFor=\"let user of users;let i =index\">\n                           <mat-expansion-panel-header>\n                            \n                             <mat-panel-description>\n\n                              \n     \n     <p style=\"    width: 100%;\n     margin-left: 10px;\"> \n       {{user.user}}\n     \n     </p>\n                             </mat-panel-description>\n                           </mat-expansion-panel-header>\n\n                           \n                           <div class=\"msg selected-bg anim-y user_active\" style=\"cursor: pointer;\"\n                             #list *ngFor=\"let taskItem of user.tasks;let i = index\" (click)=\"TaskClicked(i,list)\">\n                             <input type=\"checkbox\" name=\"msg\" id=\"mail1\" class=\"mail-choice\" checked>\n                             <label for=\"mail1\"></label>\n                             <div class=\"msg-content\">\n                              <div class=\"msg-title\">{{taskItem.taskTitle}}</div>\n\n                            </div>\n                            </div>\n                           \n                           </mat-expansion-panel>\n                       \n                      \n                 \n                      </div>\n                    \n                     </div>\n                   </div>\n                   <div class=\"col-md-8 col-12\" > \n      \n                    <div class=\"mail-detail\"  #userMail *ngIf=\"getUser\">\n                      <div class=\"mail-detail-header\" >\n                       <div class=\"mail-detail-profile\" >\n                       \n                        \n                        <div class=\"mail-detail-name\">{{getUser.user}}</div>\n                       </div>\n                       <div class=\"mail-icons\">\n                         <button mat-icon-button [matMenuTriggerFor]=\"menu\" aria-label=\"Example icon-button with a menu\">\n                           <mat-icon>more_vert</mat-icon>\n                         </button>\n                         <mat-menu #menu=\"matMenu\">\n                           <button mat-menu-item    data-bs-toggle=\"modal\" data-bs-target=\"#exampleModal\" >\n                             <mat-icon class=\"icon\" >add_task</mat-icon>\n                             add task  tO {{getUser.user}}\n                           </button>\n                           <button mat-menu-item (click)=\"editTask()\"    data-bs-toggle=\"modal\" data-bs-target=\"#exampleModal\" >\n                             <mat-icon class=\"icon\" >edit</mat-icon>\n                              edit Task\n                                </button>\n                           <button mat-menu-item (click)=\"deleteUser(userMail)\"  >\n                             <mat-icon class=\"icon\" >delete</mat-icon>\n                             delete  {{getUser.user}}\n                           </button>\n                       \n                           <button mat-menu-item (click)=\"deleteInnerTask(i,taskPreview)\"  >\n                             <mat-icon class=\"icon\"  >delete</mat-icon>\n                             delete task\n                           </button>\n                       \n                         </mat-menu>\n                     \n                       </div>\n                      </div>\n                      <div class=\"mail-contents\" *ngIf=\"innerTask &&innerTask!==null\" >\n                       <div class=\"mail-contents-subject\">\n                        <input type=\"checkbox\" name=\"msg\" id=\"mail20\" class=\"mail-choice\" checked>\n                        <label for=\"mail20\"></label>\n                        <div class=\"mail-contents-title\">{{innerTask.taskTitle}}</div>\n                       </div>\n                       <div class=\"mail\">\n                        <div class=\"mail-time\">\n                         <svg xmlns=\"http://www.w3.org/2000/svg\"\n                          width=\"24\"\n                          height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" \n                         stroke=\"currentColor\" stroke-width=\"2\"\n                          stroke-linecap=\"round\" stroke-linejoin=\"round\"\n                          class=\"feather feather-clock\">\n                          <circle cx=\"12\" cy=\"12\" r=\"10\" />\n                          <path d=\"M12 6v6l4 2\" /></svg>\n                         end at {{innerTask.endat}}\n                        </div>\n                        <div class=\"mail-inside\">\n                         {{innerTask.TaskDescription}}\n                       \n                         \n                         </div>\n                        <div class=\"mail-assign\">\n                         <div class=\"assignee\">\n                          <strong>Project manger</strong> assigned to {{getUser.user}}.\n                          <span class=\"assign-date\">{{innerTask.startIn}}</span>\n                         </div>\n                       \n                         <div class=\"assignee\">\n                          <strong>Project manger </strong> created task.\n                          <span class=\"assign-date\">{{innerTask.startIn}}</span>\n                         </div>\n                        </div>\n                        <!-- <div class=\"mail-checklist\">\n                         <input type=\"checkbox\" name=\"msg\" id=\"mail30\" class=\"mail-choice\" checked>\n                         <label for=\"mail30\">Natalie completed this task.</label>\n                         <div class=\"mail-checklist-date\">19 May, 2020</div>\n                        </div> -->\n                       \n                        <div class=\"mail-textarea\">\n                         <input type=\"text\" placeholder=\"Write a comment...\">\n                         <div class=\"textarea-icons\">\n                          <div class=\"attach\">\n                           <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"feather feather-paperclip\">\n                            <path d=\"M21.44 11.05l-9.19 9.19a6 6 0 01-8.49-8.49l9.19-9.19a4 4 0 015.66 5.66l-9.2 9.19a2 2 0 01-2.83-2.83l8.49-8.48\" /></svg>\n                          </div>\n                          <div class=\"send\">\n                           <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"feather feather-send\">\n                            <path d=\"M22 2L11 13M22 2l-7 20-4-9-9-4 20-7z\" /></svg>\n                          </div>\n                         </div>\n                        </div>\n                       </div>\n                      </div>\n                     \n                     </div>\n                   </div>\n                 </div>\n        \n             \n\n\n\n      \n\n \n        </mat-tab>\n        <mat-tab label=\"users/admin \" *ngIf=\"bussiness\"  class=\"col-md-12\"> \n          <!-- <div class=\"dropBak\">\n            <p>on development !</p>\n            </div> -->\n          <div class=\"setOwner mb-2\"  >\n            <div class=\"setOwnerheader\" > \n                 \n              <mat-selection-list  >\n                <mat-list-option (click)=\"owner=!owner\" >\n                  set owner & group\n                </mat-list-option>\n              </mat-selection-list>\n             \n            </div>\n            <mat-expansion-panel [expanded]=\"owner&&task.owner||task.group\" [disabled]=\"!owner\" class=\"exptional\" >\n              <mat-expansion-panel-header>\n                <mat-panel-title>\n                  owner and group  \n                </mat-panel-title>\n            \n              </mat-expansion-panel-header> \n          \n              \n              <form #group=\"ngForm\" (ngSubmit)=\"onGroupSubmit(group)\" >\n                <div class=\"row\" >\n\n<div class=\"col-md-3\">\n  <mat-form-field> \n    <mat-label>owner</mat-label>\n    <input  required name=\"owner\"[value]=\"task.owner?task.owner:''\" ngModel  matInput  [disabled]=\"groupSubmitted\" >\n  </mat-form-field>\n</div>\n<div class=\"col-md-2\">\n  <mat-form-field class=\"ml-2\"   style=\"    width: 64px;\">\n    <mat-label>Group</mat-label>\n    <input required  matInput name=\"group\" [value]=\"task.group?task.group:0\"  ngModel [disabled]=\"groupSubmitted\"   type=\"number\" min=\"1\">\n  </mat-form-field>\n</div>\n<div class=\"col flex\">\n\n  <button\n  (click)=\"groupSubmitted = !groupSubmitted\"\n     mat-button [type]=\"groupSubmitted? 'submit':'button'\" \n     color=\"primary\">\n     {{groupSubmitted? 'edit':'save'}}\n     <mat-icon>save</mat-icon>\n    </button>\n\n</div>\n\n\n</div>\n</form>\n         \n<form class=\"flex\"  >\n  <mat-form-field style=\"width: 100%;\" appearance=\"legacy\">\n    <mat-label>add users </mat-label>\n    <input matInput placeholder=\"user@gmail.com\" type=\"email\" #user>\n    <mat-icon matSuffix>user</mat-icon>\n    <!-- <mat-hint>{{group |aync}}</mat-hint> -->\n  </mat-form-field>\n  <button mat-button type=\"submit\" (click)=\"addUser(user)\" color=\"primary\"\n >add <mat-icon>add</mat-icon></button>\n <!-- [disabled]=\"!userstart && !user.valid && USERaDDED\"  -->\n</form>\n            \n         \n            \n            </mat-expansion-panel>\n            \n\n</div>\n\n\n        <div class=\"users_list\" *ngIf=\"owner\">\n              \n             \n                <ul class=\"list-group\">\n                  <li class=\"list-group-item d-flex justify-content-between align-items-center\" #list\n                   *ngFor=\"let user of users;let i = index\">\n                    <div class=\"user mr-2\">\n                      <img  src=\"https://assets.codepen.io/3364143/Screen+Shot+2020-08-01+at+12.24.16.png\"\n                      alt=\"\" class=\"members mail-members\">\n                  \n{{user.user}}\n                    </div>\n                    <div class=\"edit_user\">\n\n<mat-icon style=\"cursor: pointer;color: #9a9696\" (click)=\"deleteUser(i)\">delete</mat-icon>\n                   \n                    </div>\n                \n                  </li>\n               \n                  </ul>\n\n                  \n\n            </div>\n\n      \n        </mat-tab>\n    \n      </mat-tab-group>\n      \n   \n   \n      \n\n\n  <div class=\"modal fade\" id=\"exampleModal\" tabindex=\"-1\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n    <div class=\"modal-dialog modal-lg\">\n      <div class=\"modal-content\">\n        <div class=\"modal-header\">\n          <h5 class=\"modal-title\" id=\"exampleModalLabel\">add task </h5>\n          <button type=\"button\" class=\"close\" data-bs-dismiss=\"modal\" aria-label=\"Close\">\n            <span aria-hidden=\"true\">&times;</span>\n          </button>\n        </div>\n        <div class=\"modal-body\">\n    \n\n\n          <form  #userTask=\"ngForm\" (ngSubmit)=\"addUserTask(userTask)\">\n            <div class=\"mt-1 mb-3\">\n              <mat-form-field style=\" width:100%\" appearance=\"legacy\">\n                <mat-label>title</mat-label>\n                <input matInput  ngModel  required name=\"title\">\n                <mat-icon matSuffix>title</mat-icon>\n              </mat-form-field>            </div>\n            <div class=\"mt-1 mb-3\">\n              <mat-form-field style=\" width:100%\" appearance=\"legacy\">\n                <mat-label>descrption</mat-label>\n                <textarea matInput ngModel name=\"description\" required ></textarea>\n\n              \n              </mat-form-field>      \n              \n              <div class=\"form-group\">\n\n                <label for=\"start\"> start in </label>\n                <input type=\"date\" id=\"start\" class=\"form-control\" ngModel name=\"start\" required>\n                <label for=\"end\"> end in </label>\n                <input type=\"date\" id=\"end\" class=\"form-control\" ngModel name=\"end\" required >\n\n              </div>\n            \n            </div>\n\n       \n        \n\n\n\n\n\n\n<div class=\"modal-footer\">\n  <button mat-flat-button type=\"reset\">reset</button>\n    <button mat-flat-button color=\"primary\"  type=\"submit\" [disabled]=\"!userTask.valid\" data-bs-dismiss=\"modal\">save</button>\n</div>\n          </form>\n        </div>\n      \n      </div>\n    </div>\n  </div>\n\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-confirm',\n  templateUrl: './confirm.component.html',\n  styleUrls: ['./confirm.component.scss']\n})\nexport class ConfirmComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<h1 mat-dialog-title>Dialog with elements</h1>\n<div mat-dialog-content>This dialog showcases the title, close, content and actions elements.</div>\n<div mat-dialog-actions>\n  <button mat-button mat-dialog-close>Close</button>\n  <button mat-button mat-dialog-close>delete</button>\n</div>","import { createReducer } from \"@ngrx/store\";\r\nimport { User } from \"src/app/user/user.module\";\r\nimport * as AuthActions from'./auth.actions'\r\nexport interface State{\r\n    user:User;\r\n    ErrorMessage:string\r\n    loading:boolean\r\n}\r\n\r\nconst initializeState:State = {\r\n    user:null,\r\n    ErrorMessage:null,\r\n    loading:false\r\n\r\n}\r\nexport const reducer = createReducer(\r\n    initializeState,\r\n    // (AuthActions.)\r\n   \r\n  );\r\n\r\nexport function authReducer(state:State=initializeState,action:AuthActions.AuthType){\r\n\r\n\r\n    switch(action.type){\r\n        case AuthActions.AuthenticatedSucces:\r\n            const user = new User(\r\n                action.payload.userId\r\n                ,action.payload.email\r\n                ,action.payload.token\r\n                ,action.payload.expirationDate)\r\n                console.log(action.payload)\r\n            return{\r\n                ...state,\r\n                user:user,\r\n                loading:false\r\n                \r\n            }\r\n        case AuthActions.SIGNUP:\r\n            const signUpUser = new User(\r\n                action.payload.userId\r\n                ,action.payload.email\r\n                ,action.payload.token\r\n                ,action.payload.expirationDate);\r\n                console.log(action.payload)\r\n            return {\r\n                ...state,\r\n                user:signUpUser,\r\n                loading:false,\r\n                ErrorMessage:null,\r\n\r\n            }\r\n        case AuthActions.LOGOUT:\r\n            return {\r\n                ...state,\r\n                user:null\r\n            }\r\n        case AuthActions.Sin_Up_start:\r\n        case AuthActions.login_start:\r\n            return{\r\n                ...state,\r\n                ErrorMessage:null,\r\n                loading:true\r\n            }\r\n            \r\n        case AuthActions.AuthenticatedFAILD:\r\n            console.log(action.payload)\r\n            return {\r\n                ...state,\r\n                user:null,\r\n                ErrorMessage:action.payload,\r\n                loading:false\r\n                \r\n            }\r\n    }       \r\n\r\n\r\n    return state\r\n}","import { Injectable } from \"@angular/core\";\r\nimport { Subject } from \"rxjs\";\r\nimport { InnerTasks, UserTaskList } from \"src/app/user/userTaskList.module\";\r\n\r\n\r\n@Injectable(\r\n    {providedIn:\"root\"}\r\n    )\r\n\r\n\r\nexport class UserTaskLists{\r\n\r\n\r\ntasks = new Subject<UserTaskList[]>();\r\n\r\nprivate tasksList:UserTaskList[]=[];\r\n\r\naddusers(user:UserTaskList){\r\n\r\nthis.tasksList.push(user);\r\n\r\nthis.tasks.next(this.tasksList.slice());\r\n\r\n}\r\ngetusers(){\r\n    return this.tasksList\r\n}\r\ngetUser(i){\r\n    return this.tasksList[i]\r\n}\r\ndeleteUSer(i){\r\n    this.tasksList.splice(i,1);\r\n    this.tasks.next(this.tasksList.slice())\r\n}\r\naddInnerTask(i:number,task:InnerTasks){\r\nthis.tasksList[i].tasks.push(task);\r\nthis.tasks.next(this.tasksList)\r\n}\r\nDeleteinnerTask(taskIndex,i:number){\r\nthis.tasksList[taskIndex].tasks.splice(i,1);\r\nthis.tasks.next(this.tasksList)\r\n}\r\ngetInnerTask(taskIndex,innerIndex){\r\n    return this.tasksList[taskIndex].tasks[innerIndex]\r\n}\r\neditInnerTask(user,i,task:InnerTasks){\r\n    this.tasksList[user].tasks[i]=task;\r\n    this.tasks.next(this.tasksList);\r\n\r\n    \r\n\r\n}\r\n}","import {  NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [\n  {path:'' , redirectTo:'home',pathMatch:'full'},\n  {path:'home',loadChildren:()=>import('./home/home.module').then(m=>m.HomeModule)},\n  {path:'tasks',loadChildren:()=>import('./tasks/tasks.module').then(m=>m.TaskModule)},\n  {path:'login',loadChildren:()=>import('./login/login.module').then(m=>m.LoginModule)},\n  {path:'note', loadChildren:()=>import('./note/note.module').then(m=>m.NoteModule)},\n  {path:'userPage',loadChildren:()=>import('./user-page/uerPage.module').then(m=>m.UserPageModule)},\n  {path:'weatherPage',loadChildren:()=>import('./weather-app/weatherpage.module').then(m=>m.WeatherModule)},\n  {path:'userTask',loadChildren:()=>import('./user-tasks/user-tasks.module').then(m=>m.UserTasksModule)}\n\n\n\n];\n\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, { relativeLinkResolution: 'legacy' })],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule {\n }\n","import { Action } from \"@ngrx/store\";\r\nimport { UserTaskList } from \"src/app/user/userTaskList.module\";\r\nimport { TagsModule } from \"../shared/loadingSpinner/tag.module\";\r\nimport { TasksModule } from \"../tasks-model/tasks-model.module\";\r\nexport const ADD_USERS ='[tasks] ADD_USERS';\r\nexport const Add_Task = \"[tasks] Add_Task\";\r\nexport const Add_Tasks = \"[tasks] Add_Tasks\";\r\nexport const Updated_Item=\"[tasks] Updated_item\";\r\nexport const Deleted_Item= \"[tasks] Deleted_Item\";\r\nexport const StartEdit= '[tasks] StartEdit';\r\nexport const stopEdit= '[tasks] StopEdit';\r\nexport const getter = '[tasks] getter'\r\nexport const ADD_INNER='[tasks] addinner';\r\nexport const TITLEEDIT =\"[tasks] TITLEEDIT\"; \r\nexport const ActiveProject = '[tasks] ActiveProject';\r\nexport const DESCRIPTIONEDIT =\"[tasks] DESCRIPTIONEDIT\"; \r\nexport const PIORTYEDIT =\"[tasks] PIORTYEDIT\"; \r\nexport const TASKTYPEDIT =\"[tasks] TASKTYPEDIT\"; \r\nexport const SCEdit = \"[tasks] SCEDIT\"\r\nexport const PROGRESS_VALUE=\"[tasks] PROGRESS\";\r\nexport const setGroupOwner =\" [tasks] setGroupOwner\"; \r\nexport const TAGS =  \" [tasks] TAGS\";\r\nexport const DELETETAG = \" [tasks] DELETETAGS\";\r\nexport const store_Tasks = \" [tasks] store_Tasks\";\r\n\r\nexport class AddTask implements Action{\r\nreadonly type= Add_Task \r\nconstructor(\r\n    //recieve ingredient \r\n    public payload:TasksModule){}\r\n\r\n}\r\nexport class AddTasks implements Action{\r\nreadonly type = Add_Tasks;\r\nconstructor(public payload:TasksModule[]){}\r\n\r\n\r\n}\r\nexport class StoreTasks implements Action{\r\nreadonly type = store_Tasks;\r\n\r\n\r\n}\r\n\r\n\r\n\r\nexport class UpdatedItem implements Action{\r\n  readonly  type = Updated_Item;\r\n\r\n  constructor(public payload:TasksModule){}\r\n}\r\n\r\nexport class Deleting implements Action{\r\n readonly type = Deleted_Item;\r\n constructor(public payload:number){\r\n\r\n }\r\n}\r\nexport class StartEditing implements Action{\r\nreadonly type = StartEdit;\r\nconstructor(public payload:number  ){}\r\n}\r\n\r\nexport class StopEdit implements Action{\r\nreadonly type = stopEdit\r\n\r\n}\r\nexport class get implements Action{\r\nreadonly type = getter;\r\n\r\nconstructor(public payload:number){}\r\n\r\n}\r\n\r\nexport class AddInnerTasks implements Action {\r\n  readonly type= ADD_INNER;\r\n  constructor(public payload:UserTaskList){\r\n    console.log(payload)\r\n    }\r\n\r\n}\r\n// adding users \r\nexport class AddUsers implements Action{\r\nreadonly type =ADD_USERS;\r\nconstructor(public payload:string){\r\n  console.log(payload)\r\n\r\n}\r\n\r\n}\r\n\r\n\r\n//add single edit\r\nexport class TitleEdit implements Action{\r\n  readonly type = TITLEEDIT;\r\n  constructor(public payload:string){}\r\n}\r\nexport class Activate implements Action{\r\n  readonly type = ActiveProject;\r\n  constructor(public payload:boolean){\r\n    console.log(payload)\r\n  }\r\n  \r\n  }\r\nexport class DescriptionEdit implements Action{\r\n  readonly type = DESCRIPTIONEDIT;\r\n  constructor(public payload:string){\r\n  }\r\n  \r\n  }\r\nexport class PiortyEdit implements Action{\r\n  readonly type = PIORTYEDIT;\r\n  constructor(public payload:string){\r\n  }\r\n  \r\n  }\r\nexport class TaskType implements Action{\r\n  readonly type = TASKTYPEDIT\r\n  constructor(public payload:string){\r\n  }\r\n  \r\n  }\r\nexport class Schedit implements Action{\r\n  readonly type = SCEdit\r\n  constructor(public payload:{start:Date,end:Date}){\r\n  }\r\n  \r\n  }\r\nexport class ProgressVAlue implements Action{\r\n  readonly type =PROGRESS_VALUE;\r\n  constructor(public payload:number){}\r\n}\r\nexport class Tags implements Action{\r\n  readonly type = TAGS;\r\n  constructor(public payload:TagsModule){\r\n    console.log(payload)\r\n  }\r\n}\r\nexport class deleteTag implements Action{\r\n  readonly type = DELETETAG;\r\n  constructor(public payload:number){\r\n    console.log(payload)\r\n  }\r\n}\r\nexport class GroupAndOwner implements Action{\r\n  readonly type =setGroupOwner;\r\n  constructor(public payload:{owner:string,group:number}){}\r\n}\r\nexport type  TasksType =\r\n AddTask|\r\nAddTasks|\r\nUpdatedItem|\r\nStartEditing|\r\nStopEdit|\r\nget|\r\nDeleting|\r\nAddInnerTasks|\r\nActivate|\r\nProgressVAlue|\r\nGroupAndOwner|\r\nAddUsers|\r\nTitleEdit|\r\nDescriptionEdit|\r\nPiortyEdit|\r\nTaskType|\r\nSchedit|\r\nTags|\r\ndeleteTag|\r\nStoreTasks\r\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"]}