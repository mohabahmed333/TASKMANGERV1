{"version":3,"sources":["webpack:///src/app/weather-app/weatherpage.module.ts","webpack:///src/app/weather-app/weather-app.component.ts","webpack:///src/app/weather-app/weather-app.component.html"],"names":["routes","path","component","canActivate","WeatherModule","forChild","WeatherAppComponent","location","key","getCity","city","base","query","fetch","response","json","data","getWeather","id","fullDate","Date","toDateString","weekday","d","day","getDay","then","console","log","EnglishName","cityName","Key","cloudly","WeatherText","temp","Temperature","Metric","Value","err","info","value","trim","locationSubmitted"],"mappings":"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","file":"weather-app-weatherpage-module-es5.js","sourcesContent":["import { CommonModule } from \"@angular/common\";\r\nimport { NgModule } from \"@angular/core\";\r\nimport { FormsModule } from \"@angular/forms\";\r\nimport { BrowserModule } from \"@angular/platform-browser\";\r\nimport { RouterModule, Routes } from \"@angular/router\";\r\nimport { AngularMaterialModule } from \"../angular-material/angular-material.module\";\r\nimport { AuthGuard } from \"../login/auth.guard\";\r\nimport { WeatherAppComponent } from \"./weather-app.component\";\r\n\r\nconst routes:Routes = [\r\n    {path:'',component:WeatherAppComponent,canActivate:[AuthGuard]}\r\n\r\n]\r\n@NgModule({\r\n\r\n    declarations:[WeatherAppComponent],\r\n    imports:[\r\n        RouterModule.forChild(routes ),\r\n        AngularMaterialModule,\r\n        CommonModule,\r\n        FormsModule\r\n    ],\r\n    exports:[RouterModule]\r\n})\r\n\r\nexport class WeatherModule{}","import { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\n\n@Component({\n  selector: 'app-weather-app',\n  templateUrl: './weather-app.component.html',\n  styleUrls: ['./weather-app.component.scss']\n})\nexport class WeatherAppComponent implements OnInit {\n  location:boolean= false;\n   key:string = 'fHiCJkw5hhbaDOtWwt4bA1eatm3nryBJ';\n   cityName:string;\n   cloudly:string;\n   temp:number;\n   day:any;\n   fullDate:any;\n  constructor( ) {\n   }\n\n  ngOnInit(): void {\n    this.fullDate = new Date().toDateString();\n\n    const weekday = [\"Sunday\",\"Monday\",\"Tuesday\",\"Wednesday\",\"Thursday\",\"Friday\",\"Saturday\"];\n\nconst d = new Date();\nthis.day= weekday[d.getDay()];\n\n    this.getCity('cairo').then(data=>{\n      console.log(data.EnglishName);\n      this.cityName = data.EnglishName\n      return this.getWeather(data.Key);\n    })\n    .then(data=>{\n      this.cloudly = data.WeatherText;\n      this.temp = data.Temperature.Metric.Value;\n      console.log(this.temp)\n      console.log(data)\n    })\n    .catch(err=>{\n      console.log(err)\n    })\n  }\n\n  getCity = async(city=\"giza\")=>{\n\n  \nconst base ='http://dataservice.accuweather.com/locations/v1/cities/search';\nconst query = `?apikey=${this.key}&q=${city}`;\nconst response =  await fetch(base+query);\nconst data = await response.json();\nthis.getWeather(data.key)\nreturn data[0]\n}\n\ngetWeather =async (id:number) => \n{\n\n  const base  =  'http://dataservice.accuweather.com/currentconditions/v1/';\n  const query = `${id}?apikey=${this.key}`\n\n  const response= await fetch(base+query);\n  const data = await response.json();\n  return data[0];\n  \n}\n\nlocationSubmitted(info:NgForm){\n  console.log(info.value.location);\n\n  const location = info.value.location.trim()\n  this.getCity(location).then(data=>{\n    this.cityName = data.EnglishName\n\n    console.log(data)\n    return this.getWeather(data.Key);\n  }).then(data=>{\n\n    console.log(data)\n  }).catch(err=>{\n    console.log(err)\n  })\n\n}\n\n\n\n\n}\n","\n<div class=\"container\">\n    <div class=\"weather-side\">\n      <div class=\"weather-gradient\"></div>\n      <div class=\"date-container\">\n        <h2 class=\"date-dayname\">Tuesday</h2><span class=\"date-day\">{{fullDate}}</span>\n        <i class=\"location-icon\" data-feather=\"map-pin\"></i><span class=\"location\">{{cityName}}</span>\n      </div>\n      <div class=\"weather-container\"><i class=\"weather-icon\" data-feather=\"sun\"></i>\n        <h1 class=\"weather-temp\">{{temp}}°C</h1>\n        <h3 class=\"weather-desc\">{{cloudly}}</h3>\n      </div>\n    </div>\n    <div class=\"info-side\">\n      <div class=\"today-info-container\">\n        <div class=\"today-info\">\n          <div class=\"precipitation\"> <span class=\"title\">PRECIPITATION</span><span class=\"value\">0 %</span>\n            <div class=\"clear\"></div>\n          </div>\n          <div class=\"humidity\"> <span class=\"title\">HUMIDITY</span><span class=\"value\">34 %</span>\n            <div class=\"clear\"></div>\n          </div>\n          <div class=\"wind\"> <span class=\"title\">WIND</span><span class=\"value\">0 km/h</span>\n            <div class=\"clear\"></div>\n          </div>\n        </div>\n      </div>\n      <div class=\"week-container\">\n        <ul class=\"week-list\">\n          <li class=\"active\"><i class=\"day-icon\" data-feather=\"sun\"></i><span class=\"day-name\">{{day}}</span><span class=\"day-temp\">\n           {{temp}}°C</span></li>\n\n          <div class=\"clear\"></div>\n        </ul>\n      </div>\n      <div class=\"location-container\">\n        <form  #info=\"ngForm\" (ngSubmit)=\"locationSubmitted(info)\">\n\n          <button class=\"location-button\" style=\"color:black\"\n           [type]=\"location?'submit':''\"\n           [disabled]=\"!info.valid\"\n          > <i data-feather=\"map-pin\" ></i><span>Change location</span></button>\n          <div class=\"weather input\" >\n            <mat-form-field appearance=\"outline\" appearance=\"fill\" style=\"    width: 100%; \n            display: inline-block;\n            position: relative;\n            text-align: left;\n            background: #fff;\n            color: #ddd;\n            border-radius: 12px;\n            margin-top: 10px;\">\n              <mat-label>search for city</mat-label>\n              <input  matInput required placeholder=\"Placeholder\" style=\"color: black;\" ngModel name=\"location\">\n              <mat-icon matSuffix >location_city</mat-icon>\n            </mat-form-field>\n          </div>\n\n        </form>\n\n        </div>\n\n    </div>\n  </div>"]}