{"version":3,"sources":["webpack:///src/app/login/login.module.ts","webpack:///src/app/login/login.component.ts"],"names":["routes","path","component","LoginModule","forChild","LoginComponent","_snackBar","getUserPage","store","signIn","isLoading","err","loginInfo","horizontalPosition","verticalPosition","click","slideUp","slideDown","form","valid","email","value","password","Username","username","firstName","lastName","userI","next","dispatch","reset","subscribe","select","authState","ErrorMessage","open","dimissTime","setTimeout","dismiss","unsubscribe"],"mappings":"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","file":"login-login-module-es5.js","sourcesContent":["import { CommonModule } from \"@angular/common\";\r\nimport { NgModule } from \"@angular/core\";\r\nimport { FormsModule } from \"@angular/forms\";\r\nimport { RouterModule, Routes } from \"@angular/router\";\r\nimport { EffectsModule } from \"@ngrx/effects\";\r\nimport { StoreModule } from \"@ngrx/store\";\r\nimport { AngularMaterialModule } from \"../angular-material/angular-material.module\";\r\nimport { LoginComponent } from \"./login.component\";\r\nimport { AuthEffects } from \"./store/auth.effects\";\r\nimport { authReducer } from \"./store/auth.reducer\";\r\nconst routes:Routes=[\r\n    {path:'',component:LoginComponent}\r\n]\r\n@NgModule({\r\n    declarations:[LoginComponent],\r\n    imports:[\r\n        FormsModule,\r\n        AngularMaterialModule,\r\n        CommonModule,\r\n        RouterModule.forChild(routes),\r\n    ],\r\n    exports:[RouterModule]\r\n})\r\nexport class LoginModule{}","import { AfterViewInit, Component, Input, OnInit, ViewChild } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport * as $ from 'jquery';\nimport { getUserInfo } from '../user-page/userpage.service';\nimport { UserInfo } from '../user/userInfo.module';\nimport { AppState } from '../store/app.reducer';\nimport { Store } from '@ngrx/store';\nimport * as fromAuthAction from  './store/auth.actions';\n\nimport {\n  MatSnackBar,\n  MatSnackBarHorizontalPosition,\n  MatSnackBarVerticalPosition,\n} from '@angular/material/snack-bar';\nimport { Subscription } from 'rxjs';\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit , AfterViewInit{\n  @ViewChild('authForm',{static:false}) sLform:NgForm;\n  @ViewChild('login',{static:false}) login:NgForm;\n  @Input() logSwitchS;\n  signIn:boolean = true;\n  isLoading=false;\n    err=null;\n    subscribe:Subscription;\n    loginInfo:string = \"login\"\n    horizontalPosition: MatSnackBarHorizontalPosition = 'center';\n    verticalPosition: MatSnackBarVerticalPosition = 'top';\n    constructor(\n      private _snackBar: MatSnackBar,\n    private getUserPage:getUserInfo,\n    private store:Store<AppState>) { }\n  \n    \n  ngOnInit(): void {\n\n\n    \n  }\n  ngAfterViewInit(){\n    $(\".show-login-block\").click(function(){\n      $(\".sign\").slideUp(1000);\n      $(\".login\").slideDown(1000);\n      \n  \n    })\n  \n    $(\".show-sign-block\").click(function(){\n      $(\".login\").slideUp(1000);\n      $(\".sign\").slideDown(1000);\n    });\n  }\n \n  onSignUp(form:NgForm){\n\n\n    \nif(!form.valid){\n  return\n}\nconst email:string = form.value.email;\nconst password = form.value.password;\nconst Username:string = form.value.username;\nconst firstName:string = form.value.firstName;\nconst lastName:string = form.value.lastName;\nconst userI:UserInfo={Username,firstName,lastName,email}\nthis.getUserPage.userI.next(userI)\n\n\nthis.store.dispatch(new fromAuthAction.signUpStart({email:email,password:password}))\n\n\n\n\n\nform.reset();\n}\n\n\nonLoginForm(form:NgForm){\nthis.store.dispatch(new fromAuthAction.LoginStart({email:form.value.email,password:form.value.password}));\n this.subscribe= this.store.select('Auth').subscribe(authState=>{\n  if(authState.ErrorMessage&&authState.ErrorMessage!=null){\n    this._snackBar.open(authState.ErrorMessage, 'x', {\n      horizontalPosition: this.horizontalPosition,\n      verticalPosition: this.verticalPosition,  })\n  }else{\n\n    this._snackBar.open('login success', 'x', {\n      horizontalPosition: this.horizontalPosition,\n      verticalPosition: this.verticalPosition,  })\n  }\n})\nlet dimissTime = setTimeout(()=>{\n  this._snackBar.dismiss()\n},2000)\n    }\n  \n\n\n\nngOnDestroy(): void {\nthis.subscribe.unsubscribe()\n  \n}\n  }\n\n\n\n"]}